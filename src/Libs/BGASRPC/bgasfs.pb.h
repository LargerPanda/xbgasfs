// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bgasfs.proto

#ifndef PROTOBUF_bgasfs_2eproto__INCLUDED
#define PROTOBUF_bgasfs_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_bgasfs_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[12];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsFileAttrRqstMsgImpl();
void InitDefaultsFileAttrRqstMsg();
void InitDefaultsFileAttrRspMsgImpl();
void InitDefaultsFileAttrRspMsg();
void InitDefaultsUpdateFileAttrRqstMsgImpl();
void InitDefaultsUpdateFileAttrRqstMsg();
void InitDefaultsUpdateFileAttrRspMsgImpl();
void InitDefaultsUpdateFileAttrRspMsg();
void InitDefaultsFileIORqstMsgImpl();
void InitDefaultsFileIORqstMsg();
void InitDefaultsFileIORspMsgImpl();
void InitDefaultsFileIORspMsg();
void InitDefaultsClientIOReadRqstMsgImpl();
void InitDefaultsClientIOReadRqstMsg();
void InitDefaultsClientIOReadRspMsgImpl();
void InitDefaultsClientIOReadRspMsg();
void InitDefaultsClientIOWriteRqstMsgImpl();
void InitDefaultsClientIOWriteRqstMsg();
void InitDefaultsClientIOWriteRspMsgImpl();
void InitDefaultsClientIOWriteRspMsg();
void InitDefaultsDataPrefetchRqstMsgImpl();
void InitDefaultsDataPrefetchRqstMsg();
void InitDefaultsDataPrefetchRspMsgImpl();
void InitDefaultsDataPrefetchRspMsg();
inline void InitDefaults() {
  InitDefaultsFileAttrRqstMsg();
  InitDefaultsFileAttrRspMsg();
  InitDefaultsUpdateFileAttrRqstMsg();
  InitDefaultsUpdateFileAttrRspMsg();
  InitDefaultsFileIORqstMsg();
  InitDefaultsFileIORspMsg();
  InitDefaultsClientIOReadRqstMsg();
  InitDefaultsClientIOReadRspMsg();
  InitDefaultsClientIOWriteRqstMsg();
  InitDefaultsClientIOWriteRspMsg();
  InitDefaultsDataPrefetchRqstMsg();
  InitDefaultsDataPrefetchRspMsg();
}
}  // namespace protobuf_bgasfs_2eproto
namespace bgasfsmsg {
class ClientIOReadRqstMsg;
class ClientIOReadRqstMsgDefaultTypeInternal;
extern ClientIOReadRqstMsgDefaultTypeInternal _ClientIOReadRqstMsg_default_instance_;
class ClientIOReadRspMsg;
class ClientIOReadRspMsgDefaultTypeInternal;
extern ClientIOReadRspMsgDefaultTypeInternal _ClientIOReadRspMsg_default_instance_;
class ClientIOWriteRqstMsg;
class ClientIOWriteRqstMsgDefaultTypeInternal;
extern ClientIOWriteRqstMsgDefaultTypeInternal _ClientIOWriteRqstMsg_default_instance_;
class ClientIOWriteRspMsg;
class ClientIOWriteRspMsgDefaultTypeInternal;
extern ClientIOWriteRspMsgDefaultTypeInternal _ClientIOWriteRspMsg_default_instance_;
class DataPrefetchRqstMsg;
class DataPrefetchRqstMsgDefaultTypeInternal;
extern DataPrefetchRqstMsgDefaultTypeInternal _DataPrefetchRqstMsg_default_instance_;
class DataPrefetchRspMsg;
class DataPrefetchRspMsgDefaultTypeInternal;
extern DataPrefetchRspMsgDefaultTypeInternal _DataPrefetchRspMsg_default_instance_;
class FileAttrRqstMsg;
class FileAttrRqstMsgDefaultTypeInternal;
extern FileAttrRqstMsgDefaultTypeInternal _FileAttrRqstMsg_default_instance_;
class FileAttrRspMsg;
class FileAttrRspMsgDefaultTypeInternal;
extern FileAttrRspMsgDefaultTypeInternal _FileAttrRspMsg_default_instance_;
class FileIORqstMsg;
class FileIORqstMsgDefaultTypeInternal;
extern FileIORqstMsgDefaultTypeInternal _FileIORqstMsg_default_instance_;
class FileIORspMsg;
class FileIORspMsgDefaultTypeInternal;
extern FileIORspMsgDefaultTypeInternal _FileIORspMsg_default_instance_;
class UpdateFileAttrRqstMsg;
class UpdateFileAttrRqstMsgDefaultTypeInternal;
extern UpdateFileAttrRqstMsgDefaultTypeInternal _UpdateFileAttrRqstMsg_default_instance_;
class UpdateFileAttrRspMsg;
class UpdateFileAttrRspMsgDefaultTypeInternal;
extern UpdateFileAttrRspMsgDefaultTypeInternal _UpdateFileAttrRspMsg_default_instance_;
}  // namespace bgasfsmsg
namespace bgasfsmsg {

// ===================================================================

class FileAttrRqstMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bgasfsmsg.FileAttrRqstMsg) */ {
 public:
  FileAttrRqstMsg();
  virtual ~FileAttrRqstMsg();

  FileAttrRqstMsg(const FileAttrRqstMsg& from);

  inline FileAttrRqstMsg& operator=(const FileAttrRqstMsg& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FileAttrRqstMsg(FileAttrRqstMsg&& from) noexcept
    : FileAttrRqstMsg() {
    *this = ::std::move(from);
  }

  inline FileAttrRqstMsg& operator=(FileAttrRqstMsg&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FileAttrRqstMsg& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FileAttrRqstMsg* internal_default_instance() {
    return reinterpret_cast<const FileAttrRqstMsg*>(
               &_FileAttrRqstMsg_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(FileAttrRqstMsg* other);
  friend void swap(FileAttrRqstMsg& a, FileAttrRqstMsg& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FileAttrRqstMsg* New() const PROTOBUF_FINAL { return New(NULL); }

  FileAttrRqstMsg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FileAttrRqstMsg& from);
  void MergeFrom(const FileAttrRqstMsg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FileAttrRqstMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string file = 1;
  void clear_file();
  static const int kFileFieldNumber = 1;
  const ::std::string& file() const;
  void set_file(const ::std::string& value);
  #if LANG_CXX11
  void set_file(::std::string&& value);
  #endif
  void set_file(const char* value);
  void set_file(const char* value, size_t size);
  ::std::string* mutable_file();
  ::std::string* release_file();
  void set_allocated_file(::std::string* file);

  // @@protoc_insertion_point(class_scope:bgasfsmsg.FileAttrRqstMsg)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr file_;
  mutable int _cached_size_;
  friend struct ::protobuf_bgasfs_2eproto::TableStruct;
  friend void ::protobuf_bgasfs_2eproto::InitDefaultsFileAttrRqstMsgImpl();
};
// -------------------------------------------------------------------

class FileAttrRspMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bgasfsmsg.FileAttrRspMsg) */ {
 public:
  FileAttrRspMsg();
  virtual ~FileAttrRspMsg();

  FileAttrRspMsg(const FileAttrRspMsg& from);

  inline FileAttrRspMsg& operator=(const FileAttrRspMsg& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FileAttrRspMsg(FileAttrRspMsg&& from) noexcept
    : FileAttrRspMsg() {
    *this = ::std::move(from);
  }

  inline FileAttrRspMsg& operator=(FileAttrRspMsg&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FileAttrRspMsg& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FileAttrRspMsg* internal_default_instance() {
    return reinterpret_cast<const FileAttrRspMsg*>(
               &_FileAttrRspMsg_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(FileAttrRspMsg* other);
  friend void swap(FileAttrRspMsg& a, FileAttrRspMsg& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FileAttrRspMsg* New() const PROTOBUF_FINAL { return New(NULL); }

  FileAttrRspMsg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FileAttrRspMsg& from);
  void MergeFrom(const FileAttrRspMsg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FileAttrRspMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string file = 1;
  void clear_file();
  static const int kFileFieldNumber = 1;
  const ::std::string& file() const;
  void set_file(const ::std::string& value);
  #if LANG_CXX11
  void set_file(::std::string&& value);
  #endif
  void set_file(const char* value);
  void set_file(const char* value, size_t size);
  ::std::string* mutable_file();
  ::std::string* release_file();
  void set_allocated_file(::std::string* file);

  // uint32 v_st_dev = 2;
  void clear_v_st_dev();
  static const int kVStDevFieldNumber = 2;
  ::google::protobuf::uint32 v_st_dev() const;
  void set_v_st_dev(::google::protobuf::uint32 value);

  // uint32 v_st_mode = 3;
  void clear_v_st_mode();
  static const int kVStModeFieldNumber = 3;
  ::google::protobuf::uint32 v_st_mode() const;
  void set_v_st_mode(::google::protobuf::uint32 value);

  // uint32 v_st_nlink = 4;
  void clear_v_st_nlink();
  static const int kVStNlinkFieldNumber = 4;
  ::google::protobuf::uint32 v_st_nlink() const;
  void set_v_st_nlink(::google::protobuf::uint32 value);

  // uint32 v_st_uid = 5;
  void clear_v_st_uid();
  static const int kVStUidFieldNumber = 5;
  ::google::protobuf::uint32 v_st_uid() const;
  void set_v_st_uid(::google::protobuf::uint32 value);

  // uint32 v_st_gid = 6;
  void clear_v_st_gid();
  static const int kVStGidFieldNumber = 6;
  ::google::protobuf::uint32 v_st_gid() const;
  void set_v_st_gid(::google::protobuf::uint32 value);

  // uint32 v_st_rdev = 7;
  void clear_v_st_rdev();
  static const int kVStRdevFieldNumber = 7;
  ::google::protobuf::uint32 v_st_rdev() const;
  void set_v_st_rdev(::google::protobuf::uint32 value);

  // uint64 v_st_size = 8;
  void clear_v_st_size();
  static const int kVStSizeFieldNumber = 8;
  ::google::protobuf::uint64 v_st_size() const;
  void set_v_st_size(::google::protobuf::uint64 value);

  // uint64 v_st_atime = 10;
  void clear_v_st_atime();
  static const int kVStAtimeFieldNumber = 10;
  ::google::protobuf::uint64 v_st_atime() const;
  void set_v_st_atime(::google::protobuf::uint64 value);

  // uint64 v_st_mtime = 11;
  void clear_v_st_mtime();
  static const int kVStMtimeFieldNumber = 11;
  ::google::protobuf::uint64 v_st_mtime() const;
  void set_v_st_mtime(::google::protobuf::uint64 value);

  // uint64 v_st_ctime = 12;
  void clear_v_st_ctime();
  static const int kVStCtimeFieldNumber = 12;
  ::google::protobuf::uint64 v_st_ctime() const;
  void set_v_st_ctime(::google::protobuf::uint64 value);

  // uint32 v_st_blksize = 9;
  void clear_v_st_blksize();
  static const int kVStBlksizeFieldNumber = 9;
  ::google::protobuf::uint32 v_st_blksize() const;
  void set_v_st_blksize(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:bgasfsmsg.FileAttrRspMsg)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr file_;
  ::google::protobuf::uint32 v_st_dev_;
  ::google::protobuf::uint32 v_st_mode_;
  ::google::protobuf::uint32 v_st_nlink_;
  ::google::protobuf::uint32 v_st_uid_;
  ::google::protobuf::uint32 v_st_gid_;
  ::google::protobuf::uint32 v_st_rdev_;
  ::google::protobuf::uint64 v_st_size_;
  ::google::protobuf::uint64 v_st_atime_;
  ::google::protobuf::uint64 v_st_mtime_;
  ::google::protobuf::uint64 v_st_ctime_;
  ::google::protobuf::uint32 v_st_blksize_;
  mutable int _cached_size_;
  friend struct ::protobuf_bgasfs_2eproto::TableStruct;
  friend void ::protobuf_bgasfs_2eproto::InitDefaultsFileAttrRspMsgImpl();
};
// -------------------------------------------------------------------

class UpdateFileAttrRqstMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bgasfsmsg.UpdateFileAttrRqstMsg) */ {
 public:
  UpdateFileAttrRqstMsg();
  virtual ~UpdateFileAttrRqstMsg();

  UpdateFileAttrRqstMsg(const UpdateFileAttrRqstMsg& from);

  inline UpdateFileAttrRqstMsg& operator=(const UpdateFileAttrRqstMsg& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UpdateFileAttrRqstMsg(UpdateFileAttrRqstMsg&& from) noexcept
    : UpdateFileAttrRqstMsg() {
    *this = ::std::move(from);
  }

  inline UpdateFileAttrRqstMsg& operator=(UpdateFileAttrRqstMsg&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateFileAttrRqstMsg& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UpdateFileAttrRqstMsg* internal_default_instance() {
    return reinterpret_cast<const UpdateFileAttrRqstMsg*>(
               &_UpdateFileAttrRqstMsg_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(UpdateFileAttrRqstMsg* other);
  friend void swap(UpdateFileAttrRqstMsg& a, UpdateFileAttrRqstMsg& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UpdateFileAttrRqstMsg* New() const PROTOBUF_FINAL { return New(NULL); }

  UpdateFileAttrRqstMsg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UpdateFileAttrRqstMsg& from);
  void MergeFrom(const UpdateFileAttrRqstMsg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UpdateFileAttrRqstMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string file = 1;
  void clear_file();
  static const int kFileFieldNumber = 1;
  const ::std::string& file() const;
  void set_file(const ::std::string& value);
  #if LANG_CXX11
  void set_file(::std::string&& value);
  #endif
  void set_file(const char* value);
  void set_file(const char* value, size_t size);
  ::std::string* mutable_file();
  ::std::string* release_file();
  void set_allocated_file(::std::string* file);

  // uint32 v_st_dev = 2;
  void clear_v_st_dev();
  static const int kVStDevFieldNumber = 2;
  ::google::protobuf::uint32 v_st_dev() const;
  void set_v_st_dev(::google::protobuf::uint32 value);

  // uint32 v_st_mode = 3;
  void clear_v_st_mode();
  static const int kVStModeFieldNumber = 3;
  ::google::protobuf::uint32 v_st_mode() const;
  void set_v_st_mode(::google::protobuf::uint32 value);

  // uint32 v_st_nlink = 4;
  void clear_v_st_nlink();
  static const int kVStNlinkFieldNumber = 4;
  ::google::protobuf::uint32 v_st_nlink() const;
  void set_v_st_nlink(::google::protobuf::uint32 value);

  // uint32 v_st_uid = 5;
  void clear_v_st_uid();
  static const int kVStUidFieldNumber = 5;
  ::google::protobuf::uint32 v_st_uid() const;
  void set_v_st_uid(::google::protobuf::uint32 value);

  // uint32 v_st_gid = 6;
  void clear_v_st_gid();
  static const int kVStGidFieldNumber = 6;
  ::google::protobuf::uint32 v_st_gid() const;
  void set_v_st_gid(::google::protobuf::uint32 value);

  // uint32 v_st_rdev = 7;
  void clear_v_st_rdev();
  static const int kVStRdevFieldNumber = 7;
  ::google::protobuf::uint32 v_st_rdev() const;
  void set_v_st_rdev(::google::protobuf::uint32 value);

  // uint64 v_st_size = 8;
  void clear_v_st_size();
  static const int kVStSizeFieldNumber = 8;
  ::google::protobuf::uint64 v_st_size() const;
  void set_v_st_size(::google::protobuf::uint64 value);

  // uint64 v_st_atime = 10;
  void clear_v_st_atime();
  static const int kVStAtimeFieldNumber = 10;
  ::google::protobuf::uint64 v_st_atime() const;
  void set_v_st_atime(::google::protobuf::uint64 value);

  // uint64 v_st_mtime = 11;
  void clear_v_st_mtime();
  static const int kVStMtimeFieldNumber = 11;
  ::google::protobuf::uint64 v_st_mtime() const;
  void set_v_st_mtime(::google::protobuf::uint64 value);

  // uint64 v_st_ctime = 12;
  void clear_v_st_ctime();
  static const int kVStCtimeFieldNumber = 12;
  ::google::protobuf::uint64 v_st_ctime() const;
  void set_v_st_ctime(::google::protobuf::uint64 value);

  // uint32 v_st_blksize = 9;
  void clear_v_st_blksize();
  static const int kVStBlksizeFieldNumber = 9;
  ::google::protobuf::uint32 v_st_blksize() const;
  void set_v_st_blksize(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:bgasfsmsg.UpdateFileAttrRqstMsg)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr file_;
  ::google::protobuf::uint32 v_st_dev_;
  ::google::protobuf::uint32 v_st_mode_;
  ::google::protobuf::uint32 v_st_nlink_;
  ::google::protobuf::uint32 v_st_uid_;
  ::google::protobuf::uint32 v_st_gid_;
  ::google::protobuf::uint32 v_st_rdev_;
  ::google::protobuf::uint64 v_st_size_;
  ::google::protobuf::uint64 v_st_atime_;
  ::google::protobuf::uint64 v_st_mtime_;
  ::google::protobuf::uint64 v_st_ctime_;
  ::google::protobuf::uint32 v_st_blksize_;
  mutable int _cached_size_;
  friend struct ::protobuf_bgasfs_2eproto::TableStruct;
  friend void ::protobuf_bgasfs_2eproto::InitDefaultsUpdateFileAttrRqstMsgImpl();
};
// -------------------------------------------------------------------

class UpdateFileAttrRspMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bgasfsmsg.UpdateFileAttrRspMsg) */ {
 public:
  UpdateFileAttrRspMsg();
  virtual ~UpdateFileAttrRspMsg();

  UpdateFileAttrRspMsg(const UpdateFileAttrRspMsg& from);

  inline UpdateFileAttrRspMsg& operator=(const UpdateFileAttrRspMsg& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UpdateFileAttrRspMsg(UpdateFileAttrRspMsg&& from) noexcept
    : UpdateFileAttrRspMsg() {
    *this = ::std::move(from);
  }

  inline UpdateFileAttrRspMsg& operator=(UpdateFileAttrRspMsg&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateFileAttrRspMsg& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UpdateFileAttrRspMsg* internal_default_instance() {
    return reinterpret_cast<const UpdateFileAttrRspMsg*>(
               &_UpdateFileAttrRspMsg_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(UpdateFileAttrRspMsg* other);
  friend void swap(UpdateFileAttrRspMsg& a, UpdateFileAttrRspMsg& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UpdateFileAttrRspMsg* New() const PROTOBUF_FINAL { return New(NULL); }

  UpdateFileAttrRspMsg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UpdateFileAttrRspMsg& from);
  void MergeFrom(const UpdateFileAttrRspMsg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UpdateFileAttrRspMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool success = 1;
  void clear_success();
  static const int kSuccessFieldNumber = 1;
  bool success() const;
  void set_success(bool value);

  // @@protoc_insertion_point(class_scope:bgasfsmsg.UpdateFileAttrRspMsg)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool success_;
  mutable int _cached_size_;
  friend struct ::protobuf_bgasfs_2eproto::TableStruct;
  friend void ::protobuf_bgasfs_2eproto::InitDefaultsUpdateFileAttrRspMsgImpl();
};
// -------------------------------------------------------------------

class FileIORqstMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bgasfsmsg.FileIORqstMsg) */ {
 public:
  FileIORqstMsg();
  virtual ~FileIORqstMsg();

  FileIORqstMsg(const FileIORqstMsg& from);

  inline FileIORqstMsg& operator=(const FileIORqstMsg& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FileIORqstMsg(FileIORqstMsg&& from) noexcept
    : FileIORqstMsg() {
    *this = ::std::move(from);
  }

  inline FileIORqstMsg& operator=(FileIORqstMsg&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FileIORqstMsg& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FileIORqstMsg* internal_default_instance() {
    return reinterpret_cast<const FileIORqstMsg*>(
               &_FileIORqstMsg_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(FileIORqstMsg* other);
  friend void swap(FileIORqstMsg& a, FileIORqstMsg& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FileIORqstMsg* New() const PROTOBUF_FINAL { return New(NULL); }

  FileIORqstMsg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FileIORqstMsg& from);
  void MergeFrom(const FileIORqstMsg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FileIORqstMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string file = 1;
  void clear_file();
  static const int kFileFieldNumber = 1;
  const ::std::string& file() const;
  void set_file(const ::std::string& value);
  #if LANG_CXX11
  void set_file(::std::string&& value);
  #endif
  void set_file(const char* value);
  void set_file(const char* value, size_t size);
  ::std::string* mutable_file();
  ::std::string* release_file();
  void set_allocated_file(::std::string* file);

  // bool write = 2;
  void clear_write();
  static const int kWriteFieldNumber = 2;
  bool write() const;
  void set_write(bool value);

  // @@protoc_insertion_point(class_scope:bgasfsmsg.FileIORqstMsg)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr file_;
  bool write_;
  mutable int _cached_size_;
  friend struct ::protobuf_bgasfs_2eproto::TableStruct;
  friend void ::protobuf_bgasfs_2eproto::InitDefaultsFileIORqstMsgImpl();
};
// -------------------------------------------------------------------

class FileIORspMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bgasfsmsg.FileIORspMsg) */ {
 public:
  FileIORspMsg();
  virtual ~FileIORspMsg();

  FileIORspMsg(const FileIORspMsg& from);

  inline FileIORspMsg& operator=(const FileIORspMsg& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FileIORspMsg(FileIORspMsg&& from) noexcept
    : FileIORspMsg() {
    *this = ::std::move(from);
  }

  inline FileIORspMsg& operator=(FileIORspMsg&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FileIORspMsg& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FileIORspMsg* internal_default_instance() {
    return reinterpret_cast<const FileIORspMsg*>(
               &_FileIORspMsg_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(FileIORspMsg* other);
  friend void swap(FileIORspMsg& a, FileIORspMsg& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FileIORspMsg* New() const PROTOBUF_FINAL { return New(NULL); }

  FileIORspMsg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FileIORspMsg& from);
  void MergeFrom(const FileIORspMsg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FileIORspMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string server = 1;
  void clear_server();
  static const int kServerFieldNumber = 1;
  const ::std::string& server() const;
  void set_server(const ::std::string& value);
  #if LANG_CXX11
  void set_server(::std::string&& value);
  #endif
  void set_server(const char* value);
  void set_server(const char* value, size_t size);
  ::std::string* mutable_server();
  ::std::string* release_server();
  void set_allocated_server(::std::string* server);

  // uint64 len = 2;
  void clear_len();
  static const int kLenFieldNumber = 2;
  ::google::protobuf::uint64 len() const;
  void set_len(::google::protobuf::uint64 value);

  // bool success = 3;
  void clear_success();
  static const int kSuccessFieldNumber = 3;
  bool success() const;
  void set_success(bool value);

  // @@protoc_insertion_point(class_scope:bgasfsmsg.FileIORspMsg)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr server_;
  ::google::protobuf::uint64 len_;
  bool success_;
  mutable int _cached_size_;
  friend struct ::protobuf_bgasfs_2eproto::TableStruct;
  friend void ::protobuf_bgasfs_2eproto::InitDefaultsFileIORspMsgImpl();
};
// -------------------------------------------------------------------

class ClientIOReadRqstMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bgasfsmsg.ClientIOReadRqstMsg) */ {
 public:
  ClientIOReadRqstMsg();
  virtual ~ClientIOReadRqstMsg();

  ClientIOReadRqstMsg(const ClientIOReadRqstMsg& from);

  inline ClientIOReadRqstMsg& operator=(const ClientIOReadRqstMsg& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ClientIOReadRqstMsg(ClientIOReadRqstMsg&& from) noexcept
    : ClientIOReadRqstMsg() {
    *this = ::std::move(from);
  }

  inline ClientIOReadRqstMsg& operator=(ClientIOReadRqstMsg&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientIOReadRqstMsg& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ClientIOReadRqstMsg* internal_default_instance() {
    return reinterpret_cast<const ClientIOReadRqstMsg*>(
               &_ClientIOReadRqstMsg_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(ClientIOReadRqstMsg* other);
  friend void swap(ClientIOReadRqstMsg& a, ClientIOReadRqstMsg& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClientIOReadRqstMsg* New() const PROTOBUF_FINAL { return New(NULL); }

  ClientIOReadRqstMsg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ClientIOReadRqstMsg& from);
  void MergeFrom(const ClientIOReadRqstMsg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ClientIOReadRqstMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string file = 1;
  void clear_file();
  static const int kFileFieldNumber = 1;
  const ::std::string& file() const;
  void set_file(const ::std::string& value);
  #if LANG_CXX11
  void set_file(::std::string&& value);
  #endif
  void set_file(const char* value);
  void set_file(const char* value, size_t size);
  ::std::string* mutable_file();
  ::std::string* release_file();
  void set_allocated_file(::std::string* file);

  // uint64 offset = 2;
  void clear_offset();
  static const int kOffsetFieldNumber = 2;
  ::google::protobuf::uint64 offset() const;
  void set_offset(::google::protobuf::uint64 value);

  // uint64 len = 3;
  void clear_len();
  static const int kLenFieldNumber = 3;
  ::google::protobuf::uint64 len() const;
  void set_len(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:bgasfsmsg.ClientIOReadRqstMsg)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr file_;
  ::google::protobuf::uint64 offset_;
  ::google::protobuf::uint64 len_;
  mutable int _cached_size_;
  friend struct ::protobuf_bgasfs_2eproto::TableStruct;
  friend void ::protobuf_bgasfs_2eproto::InitDefaultsClientIOReadRqstMsgImpl();
};
// -------------------------------------------------------------------

class ClientIOReadRspMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bgasfsmsg.ClientIOReadRspMsg) */ {
 public:
  ClientIOReadRspMsg();
  virtual ~ClientIOReadRspMsg();

  ClientIOReadRspMsg(const ClientIOReadRspMsg& from);

  inline ClientIOReadRspMsg& operator=(const ClientIOReadRspMsg& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ClientIOReadRspMsg(ClientIOReadRspMsg&& from) noexcept
    : ClientIOReadRspMsg() {
    *this = ::std::move(from);
  }

  inline ClientIOReadRspMsg& operator=(ClientIOReadRspMsg&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientIOReadRspMsg& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ClientIOReadRspMsg* internal_default_instance() {
    return reinterpret_cast<const ClientIOReadRspMsg*>(
               &_ClientIOReadRspMsg_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(ClientIOReadRspMsg* other);
  friend void swap(ClientIOReadRspMsg& a, ClientIOReadRspMsg& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClientIOReadRspMsg* New() const PROTOBUF_FINAL { return New(NULL); }

  ClientIOReadRspMsg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ClientIOReadRspMsg& from);
  void MergeFrom(const ClientIOReadRspMsg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ClientIOReadRspMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string file = 1;
  void clear_file();
  static const int kFileFieldNumber = 1;
  const ::std::string& file() const;
  void set_file(const ::std::string& value);
  #if LANG_CXX11
  void set_file(::std::string&& value);
  #endif
  void set_file(const char* value);
  void set_file(const char* value, size_t size);
  ::std::string* mutable_file();
  ::std::string* release_file();
  void set_allocated_file(::std::string* file);

  // @@protoc_insertion_point(class_scope:bgasfsmsg.ClientIOReadRspMsg)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr file_;
  mutable int _cached_size_;
  friend struct ::protobuf_bgasfs_2eproto::TableStruct;
  friend void ::protobuf_bgasfs_2eproto::InitDefaultsClientIOReadRspMsgImpl();
};
// -------------------------------------------------------------------

class ClientIOWriteRqstMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bgasfsmsg.ClientIOWriteRqstMsg) */ {
 public:
  ClientIOWriteRqstMsg();
  virtual ~ClientIOWriteRqstMsg();

  ClientIOWriteRqstMsg(const ClientIOWriteRqstMsg& from);

  inline ClientIOWriteRqstMsg& operator=(const ClientIOWriteRqstMsg& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ClientIOWriteRqstMsg(ClientIOWriteRqstMsg&& from) noexcept
    : ClientIOWriteRqstMsg() {
    *this = ::std::move(from);
  }

  inline ClientIOWriteRqstMsg& operator=(ClientIOWriteRqstMsg&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientIOWriteRqstMsg& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ClientIOWriteRqstMsg* internal_default_instance() {
    return reinterpret_cast<const ClientIOWriteRqstMsg*>(
               &_ClientIOWriteRqstMsg_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(ClientIOWriteRqstMsg* other);
  friend void swap(ClientIOWriteRqstMsg& a, ClientIOWriteRqstMsg& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClientIOWriteRqstMsg* New() const PROTOBUF_FINAL { return New(NULL); }

  ClientIOWriteRqstMsg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ClientIOWriteRqstMsg& from);
  void MergeFrom(const ClientIOWriteRqstMsg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ClientIOWriteRqstMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string file = 1;
  void clear_file();
  static const int kFileFieldNumber = 1;
  const ::std::string& file() const;
  void set_file(const ::std::string& value);
  #if LANG_CXX11
  void set_file(::std::string&& value);
  #endif
  void set_file(const char* value);
  void set_file(const char* value, size_t size);
  ::std::string* mutable_file();
  ::std::string* release_file();
  void set_allocated_file(::std::string* file);

  // uint64 offset = 2;
  void clear_offset();
  static const int kOffsetFieldNumber = 2;
  ::google::protobuf::uint64 offset() const;
  void set_offset(::google::protobuf::uint64 value);

  // uint64 len = 3;
  void clear_len();
  static const int kLenFieldNumber = 3;
  ::google::protobuf::uint64 len() const;
  void set_len(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:bgasfsmsg.ClientIOWriteRqstMsg)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr file_;
  ::google::protobuf::uint64 offset_;
  ::google::protobuf::uint64 len_;
  mutable int _cached_size_;
  friend struct ::protobuf_bgasfs_2eproto::TableStruct;
  friend void ::protobuf_bgasfs_2eproto::InitDefaultsClientIOWriteRqstMsgImpl();
};
// -------------------------------------------------------------------

class ClientIOWriteRspMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bgasfsmsg.ClientIOWriteRspMsg) */ {
 public:
  ClientIOWriteRspMsg();
  virtual ~ClientIOWriteRspMsg();

  ClientIOWriteRspMsg(const ClientIOWriteRspMsg& from);

  inline ClientIOWriteRspMsg& operator=(const ClientIOWriteRspMsg& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ClientIOWriteRspMsg(ClientIOWriteRspMsg&& from) noexcept
    : ClientIOWriteRspMsg() {
    *this = ::std::move(from);
  }

  inline ClientIOWriteRspMsg& operator=(ClientIOWriteRspMsg&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientIOWriteRspMsg& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ClientIOWriteRspMsg* internal_default_instance() {
    return reinterpret_cast<const ClientIOWriteRspMsg*>(
               &_ClientIOWriteRspMsg_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(ClientIOWriteRspMsg* other);
  friend void swap(ClientIOWriteRspMsg& a, ClientIOWriteRspMsg& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClientIOWriteRspMsg* New() const PROTOBUF_FINAL { return New(NULL); }

  ClientIOWriteRspMsg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ClientIOWriteRspMsg& from);
  void MergeFrom(const ClientIOWriteRspMsg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ClientIOWriteRspMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string file = 1;
  void clear_file();
  static const int kFileFieldNumber = 1;
  const ::std::string& file() const;
  void set_file(const ::std::string& value);
  #if LANG_CXX11
  void set_file(::std::string&& value);
  #endif
  void set_file(const char* value);
  void set_file(const char* value, size_t size);
  ::std::string* mutable_file();
  ::std::string* release_file();
  void set_allocated_file(::std::string* file);

  // bool success = 2;
  void clear_success();
  static const int kSuccessFieldNumber = 2;
  bool success() const;
  void set_success(bool value);

  // @@protoc_insertion_point(class_scope:bgasfsmsg.ClientIOWriteRspMsg)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr file_;
  bool success_;
  mutable int _cached_size_;
  friend struct ::protobuf_bgasfs_2eproto::TableStruct;
  friend void ::protobuf_bgasfs_2eproto::InitDefaultsClientIOWriteRspMsgImpl();
};
// -------------------------------------------------------------------

class DataPrefetchRqstMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bgasfsmsg.DataPrefetchRqstMsg) */ {
 public:
  DataPrefetchRqstMsg();
  virtual ~DataPrefetchRqstMsg();

  DataPrefetchRqstMsg(const DataPrefetchRqstMsg& from);

  inline DataPrefetchRqstMsg& operator=(const DataPrefetchRqstMsg& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DataPrefetchRqstMsg(DataPrefetchRqstMsg&& from) noexcept
    : DataPrefetchRqstMsg() {
    *this = ::std::move(from);
  }

  inline DataPrefetchRqstMsg& operator=(DataPrefetchRqstMsg&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DataPrefetchRqstMsg& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DataPrefetchRqstMsg* internal_default_instance() {
    return reinterpret_cast<const DataPrefetchRqstMsg*>(
               &_DataPrefetchRqstMsg_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(DataPrefetchRqstMsg* other);
  friend void swap(DataPrefetchRqstMsg& a, DataPrefetchRqstMsg& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DataPrefetchRqstMsg* New() const PROTOBUF_FINAL { return New(NULL); }

  DataPrefetchRqstMsg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DataPrefetchRqstMsg& from);
  void MergeFrom(const DataPrefetchRqstMsg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DataPrefetchRqstMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string file = 1;
  void clear_file();
  static const int kFileFieldNumber = 1;
  const ::std::string& file() const;
  void set_file(const ::std::string& value);
  #if LANG_CXX11
  void set_file(::std::string&& value);
  #endif
  void set_file(const char* value);
  void set_file(const char* value, size_t size);
  ::std::string* mutable_file();
  ::std::string* release_file();
  void set_allocated_file(::std::string* file);

  // uint64 offset = 2;
  void clear_offset();
  static const int kOffsetFieldNumber = 2;
  ::google::protobuf::uint64 offset() const;
  void set_offset(::google::protobuf::uint64 value);

  // uint64 len = 3;
  void clear_len();
  static const int kLenFieldNumber = 3;
  ::google::protobuf::uint64 len() const;
  void set_len(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:bgasfsmsg.DataPrefetchRqstMsg)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr file_;
  ::google::protobuf::uint64 offset_;
  ::google::protobuf::uint64 len_;
  mutable int _cached_size_;
  friend struct ::protobuf_bgasfs_2eproto::TableStruct;
  friend void ::protobuf_bgasfs_2eproto::InitDefaultsDataPrefetchRqstMsgImpl();
};
// -------------------------------------------------------------------

class DataPrefetchRspMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bgasfsmsg.DataPrefetchRspMsg) */ {
 public:
  DataPrefetchRspMsg();
  virtual ~DataPrefetchRspMsg();

  DataPrefetchRspMsg(const DataPrefetchRspMsg& from);

  inline DataPrefetchRspMsg& operator=(const DataPrefetchRspMsg& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DataPrefetchRspMsg(DataPrefetchRspMsg&& from) noexcept
    : DataPrefetchRspMsg() {
    *this = ::std::move(from);
  }

  inline DataPrefetchRspMsg& operator=(DataPrefetchRspMsg&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DataPrefetchRspMsg& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DataPrefetchRspMsg* internal_default_instance() {
    return reinterpret_cast<const DataPrefetchRspMsg*>(
               &_DataPrefetchRspMsg_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(DataPrefetchRspMsg* other);
  friend void swap(DataPrefetchRspMsg& a, DataPrefetchRspMsg& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DataPrefetchRspMsg* New() const PROTOBUF_FINAL { return New(NULL); }

  DataPrefetchRspMsg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DataPrefetchRspMsg& from);
  void MergeFrom(const DataPrefetchRspMsg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DataPrefetchRspMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string file = 1;
  void clear_file();
  static const int kFileFieldNumber = 1;
  const ::std::string& file() const;
  void set_file(const ::std::string& value);
  #if LANG_CXX11
  void set_file(::std::string&& value);
  #endif
  void set_file(const char* value);
  void set_file(const char* value, size_t size);
  ::std::string* mutable_file();
  ::std::string* release_file();
  void set_allocated_file(::std::string* file);

  // bool success = 2;
  void clear_success();
  static const int kSuccessFieldNumber = 2;
  bool success() const;
  void set_success(bool value);

  // @@protoc_insertion_point(class_scope:bgasfsmsg.DataPrefetchRspMsg)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr file_;
  bool success_;
  mutable int _cached_size_;
  friend struct ::protobuf_bgasfs_2eproto::TableStruct;
  friend void ::protobuf_bgasfs_2eproto::InitDefaultsDataPrefetchRspMsgImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// FileAttrRqstMsg

// string file = 1;
inline void FileAttrRqstMsg::clear_file() {
  file_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FileAttrRqstMsg::file() const {
  // @@protoc_insertion_point(field_get:bgasfsmsg.FileAttrRqstMsg.file)
  return file_.GetNoArena();
}
inline void FileAttrRqstMsg::set_file(const ::std::string& value) {
  
  file_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bgasfsmsg.FileAttrRqstMsg.file)
}
#if LANG_CXX11
inline void FileAttrRqstMsg::set_file(::std::string&& value) {
  
  file_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bgasfsmsg.FileAttrRqstMsg.file)
}
#endif
inline void FileAttrRqstMsg::set_file(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  file_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bgasfsmsg.FileAttrRqstMsg.file)
}
inline void FileAttrRqstMsg::set_file(const char* value, size_t size) {
  
  file_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bgasfsmsg.FileAttrRqstMsg.file)
}
inline ::std::string* FileAttrRqstMsg::mutable_file() {
  
  // @@protoc_insertion_point(field_mutable:bgasfsmsg.FileAttrRqstMsg.file)
  return file_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FileAttrRqstMsg::release_file() {
  // @@protoc_insertion_point(field_release:bgasfsmsg.FileAttrRqstMsg.file)
  
  return file_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FileAttrRqstMsg::set_allocated_file(::std::string* file) {
  if (file != NULL) {
    
  } else {
    
  }
  file_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), file);
  // @@protoc_insertion_point(field_set_allocated:bgasfsmsg.FileAttrRqstMsg.file)
}

// -------------------------------------------------------------------

// FileAttrRspMsg

// string file = 1;
inline void FileAttrRspMsg::clear_file() {
  file_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FileAttrRspMsg::file() const {
  // @@protoc_insertion_point(field_get:bgasfsmsg.FileAttrRspMsg.file)
  return file_.GetNoArena();
}
inline void FileAttrRspMsg::set_file(const ::std::string& value) {
  
  file_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bgasfsmsg.FileAttrRspMsg.file)
}
#if LANG_CXX11
inline void FileAttrRspMsg::set_file(::std::string&& value) {
  
  file_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bgasfsmsg.FileAttrRspMsg.file)
}
#endif
inline void FileAttrRspMsg::set_file(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  file_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bgasfsmsg.FileAttrRspMsg.file)
}
inline void FileAttrRspMsg::set_file(const char* value, size_t size) {
  
  file_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bgasfsmsg.FileAttrRspMsg.file)
}
inline ::std::string* FileAttrRspMsg::mutable_file() {
  
  // @@protoc_insertion_point(field_mutable:bgasfsmsg.FileAttrRspMsg.file)
  return file_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FileAttrRspMsg::release_file() {
  // @@protoc_insertion_point(field_release:bgasfsmsg.FileAttrRspMsg.file)
  
  return file_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FileAttrRspMsg::set_allocated_file(::std::string* file) {
  if (file != NULL) {
    
  } else {
    
  }
  file_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), file);
  // @@protoc_insertion_point(field_set_allocated:bgasfsmsg.FileAttrRspMsg.file)
}

// uint32 v_st_dev = 2;
inline void FileAttrRspMsg::clear_v_st_dev() {
  v_st_dev_ = 0u;
}
inline ::google::protobuf::uint32 FileAttrRspMsg::v_st_dev() const {
  // @@protoc_insertion_point(field_get:bgasfsmsg.FileAttrRspMsg.v_st_dev)
  return v_st_dev_;
}
inline void FileAttrRspMsg::set_v_st_dev(::google::protobuf::uint32 value) {
  
  v_st_dev_ = value;
  // @@protoc_insertion_point(field_set:bgasfsmsg.FileAttrRspMsg.v_st_dev)
}

// uint32 v_st_mode = 3;
inline void FileAttrRspMsg::clear_v_st_mode() {
  v_st_mode_ = 0u;
}
inline ::google::protobuf::uint32 FileAttrRspMsg::v_st_mode() const {
  // @@protoc_insertion_point(field_get:bgasfsmsg.FileAttrRspMsg.v_st_mode)
  return v_st_mode_;
}
inline void FileAttrRspMsg::set_v_st_mode(::google::protobuf::uint32 value) {
  
  v_st_mode_ = value;
  // @@protoc_insertion_point(field_set:bgasfsmsg.FileAttrRspMsg.v_st_mode)
}

// uint32 v_st_nlink = 4;
inline void FileAttrRspMsg::clear_v_st_nlink() {
  v_st_nlink_ = 0u;
}
inline ::google::protobuf::uint32 FileAttrRspMsg::v_st_nlink() const {
  // @@protoc_insertion_point(field_get:bgasfsmsg.FileAttrRspMsg.v_st_nlink)
  return v_st_nlink_;
}
inline void FileAttrRspMsg::set_v_st_nlink(::google::protobuf::uint32 value) {
  
  v_st_nlink_ = value;
  // @@protoc_insertion_point(field_set:bgasfsmsg.FileAttrRspMsg.v_st_nlink)
}

// uint32 v_st_uid = 5;
inline void FileAttrRspMsg::clear_v_st_uid() {
  v_st_uid_ = 0u;
}
inline ::google::protobuf::uint32 FileAttrRspMsg::v_st_uid() const {
  // @@protoc_insertion_point(field_get:bgasfsmsg.FileAttrRspMsg.v_st_uid)
  return v_st_uid_;
}
inline void FileAttrRspMsg::set_v_st_uid(::google::protobuf::uint32 value) {
  
  v_st_uid_ = value;
  // @@protoc_insertion_point(field_set:bgasfsmsg.FileAttrRspMsg.v_st_uid)
}

// uint32 v_st_gid = 6;
inline void FileAttrRspMsg::clear_v_st_gid() {
  v_st_gid_ = 0u;
}
inline ::google::protobuf::uint32 FileAttrRspMsg::v_st_gid() const {
  // @@protoc_insertion_point(field_get:bgasfsmsg.FileAttrRspMsg.v_st_gid)
  return v_st_gid_;
}
inline void FileAttrRspMsg::set_v_st_gid(::google::protobuf::uint32 value) {
  
  v_st_gid_ = value;
  // @@protoc_insertion_point(field_set:bgasfsmsg.FileAttrRspMsg.v_st_gid)
}

// uint32 v_st_rdev = 7;
inline void FileAttrRspMsg::clear_v_st_rdev() {
  v_st_rdev_ = 0u;
}
inline ::google::protobuf::uint32 FileAttrRspMsg::v_st_rdev() const {
  // @@protoc_insertion_point(field_get:bgasfsmsg.FileAttrRspMsg.v_st_rdev)
  return v_st_rdev_;
}
inline void FileAttrRspMsg::set_v_st_rdev(::google::protobuf::uint32 value) {
  
  v_st_rdev_ = value;
  // @@protoc_insertion_point(field_set:bgasfsmsg.FileAttrRspMsg.v_st_rdev)
}

// uint64 v_st_size = 8;
inline void FileAttrRspMsg::clear_v_st_size() {
  v_st_size_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 FileAttrRspMsg::v_st_size() const {
  // @@protoc_insertion_point(field_get:bgasfsmsg.FileAttrRspMsg.v_st_size)
  return v_st_size_;
}
inline void FileAttrRspMsg::set_v_st_size(::google::protobuf::uint64 value) {
  
  v_st_size_ = value;
  // @@protoc_insertion_point(field_set:bgasfsmsg.FileAttrRspMsg.v_st_size)
}

// uint32 v_st_blksize = 9;
inline void FileAttrRspMsg::clear_v_st_blksize() {
  v_st_blksize_ = 0u;
}
inline ::google::protobuf::uint32 FileAttrRspMsg::v_st_blksize() const {
  // @@protoc_insertion_point(field_get:bgasfsmsg.FileAttrRspMsg.v_st_blksize)
  return v_st_blksize_;
}
inline void FileAttrRspMsg::set_v_st_blksize(::google::protobuf::uint32 value) {
  
  v_st_blksize_ = value;
  // @@protoc_insertion_point(field_set:bgasfsmsg.FileAttrRspMsg.v_st_blksize)
}

// uint64 v_st_atime = 10;
inline void FileAttrRspMsg::clear_v_st_atime() {
  v_st_atime_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 FileAttrRspMsg::v_st_atime() const {
  // @@protoc_insertion_point(field_get:bgasfsmsg.FileAttrRspMsg.v_st_atime)
  return v_st_atime_;
}
inline void FileAttrRspMsg::set_v_st_atime(::google::protobuf::uint64 value) {
  
  v_st_atime_ = value;
  // @@protoc_insertion_point(field_set:bgasfsmsg.FileAttrRspMsg.v_st_atime)
}

// uint64 v_st_mtime = 11;
inline void FileAttrRspMsg::clear_v_st_mtime() {
  v_st_mtime_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 FileAttrRspMsg::v_st_mtime() const {
  // @@protoc_insertion_point(field_get:bgasfsmsg.FileAttrRspMsg.v_st_mtime)
  return v_st_mtime_;
}
inline void FileAttrRspMsg::set_v_st_mtime(::google::protobuf::uint64 value) {
  
  v_st_mtime_ = value;
  // @@protoc_insertion_point(field_set:bgasfsmsg.FileAttrRspMsg.v_st_mtime)
}

// uint64 v_st_ctime = 12;
inline void FileAttrRspMsg::clear_v_st_ctime() {
  v_st_ctime_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 FileAttrRspMsg::v_st_ctime() const {
  // @@protoc_insertion_point(field_get:bgasfsmsg.FileAttrRspMsg.v_st_ctime)
  return v_st_ctime_;
}
inline void FileAttrRspMsg::set_v_st_ctime(::google::protobuf::uint64 value) {
  
  v_st_ctime_ = value;
  // @@protoc_insertion_point(field_set:bgasfsmsg.FileAttrRspMsg.v_st_ctime)
}

// -------------------------------------------------------------------

// UpdateFileAttrRqstMsg

// string file = 1;
inline void UpdateFileAttrRqstMsg::clear_file() {
  file_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UpdateFileAttrRqstMsg::file() const {
  // @@protoc_insertion_point(field_get:bgasfsmsg.UpdateFileAttrRqstMsg.file)
  return file_.GetNoArena();
}
inline void UpdateFileAttrRqstMsg::set_file(const ::std::string& value) {
  
  file_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bgasfsmsg.UpdateFileAttrRqstMsg.file)
}
#if LANG_CXX11
inline void UpdateFileAttrRqstMsg::set_file(::std::string&& value) {
  
  file_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bgasfsmsg.UpdateFileAttrRqstMsg.file)
}
#endif
inline void UpdateFileAttrRqstMsg::set_file(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  file_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bgasfsmsg.UpdateFileAttrRqstMsg.file)
}
inline void UpdateFileAttrRqstMsg::set_file(const char* value, size_t size) {
  
  file_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bgasfsmsg.UpdateFileAttrRqstMsg.file)
}
inline ::std::string* UpdateFileAttrRqstMsg::mutable_file() {
  
  // @@protoc_insertion_point(field_mutable:bgasfsmsg.UpdateFileAttrRqstMsg.file)
  return file_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UpdateFileAttrRqstMsg::release_file() {
  // @@protoc_insertion_point(field_release:bgasfsmsg.UpdateFileAttrRqstMsg.file)
  
  return file_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UpdateFileAttrRqstMsg::set_allocated_file(::std::string* file) {
  if (file != NULL) {
    
  } else {
    
  }
  file_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), file);
  // @@protoc_insertion_point(field_set_allocated:bgasfsmsg.UpdateFileAttrRqstMsg.file)
}

// uint32 v_st_dev = 2;
inline void UpdateFileAttrRqstMsg::clear_v_st_dev() {
  v_st_dev_ = 0u;
}
inline ::google::protobuf::uint32 UpdateFileAttrRqstMsg::v_st_dev() const {
  // @@protoc_insertion_point(field_get:bgasfsmsg.UpdateFileAttrRqstMsg.v_st_dev)
  return v_st_dev_;
}
inline void UpdateFileAttrRqstMsg::set_v_st_dev(::google::protobuf::uint32 value) {
  
  v_st_dev_ = value;
  // @@protoc_insertion_point(field_set:bgasfsmsg.UpdateFileAttrRqstMsg.v_st_dev)
}

// uint32 v_st_mode = 3;
inline void UpdateFileAttrRqstMsg::clear_v_st_mode() {
  v_st_mode_ = 0u;
}
inline ::google::protobuf::uint32 UpdateFileAttrRqstMsg::v_st_mode() const {
  // @@protoc_insertion_point(field_get:bgasfsmsg.UpdateFileAttrRqstMsg.v_st_mode)
  return v_st_mode_;
}
inline void UpdateFileAttrRqstMsg::set_v_st_mode(::google::protobuf::uint32 value) {
  
  v_st_mode_ = value;
  // @@protoc_insertion_point(field_set:bgasfsmsg.UpdateFileAttrRqstMsg.v_st_mode)
}

// uint32 v_st_nlink = 4;
inline void UpdateFileAttrRqstMsg::clear_v_st_nlink() {
  v_st_nlink_ = 0u;
}
inline ::google::protobuf::uint32 UpdateFileAttrRqstMsg::v_st_nlink() const {
  // @@protoc_insertion_point(field_get:bgasfsmsg.UpdateFileAttrRqstMsg.v_st_nlink)
  return v_st_nlink_;
}
inline void UpdateFileAttrRqstMsg::set_v_st_nlink(::google::protobuf::uint32 value) {
  
  v_st_nlink_ = value;
  // @@protoc_insertion_point(field_set:bgasfsmsg.UpdateFileAttrRqstMsg.v_st_nlink)
}

// uint32 v_st_uid = 5;
inline void UpdateFileAttrRqstMsg::clear_v_st_uid() {
  v_st_uid_ = 0u;
}
inline ::google::protobuf::uint32 UpdateFileAttrRqstMsg::v_st_uid() const {
  // @@protoc_insertion_point(field_get:bgasfsmsg.UpdateFileAttrRqstMsg.v_st_uid)
  return v_st_uid_;
}
inline void UpdateFileAttrRqstMsg::set_v_st_uid(::google::protobuf::uint32 value) {
  
  v_st_uid_ = value;
  // @@protoc_insertion_point(field_set:bgasfsmsg.UpdateFileAttrRqstMsg.v_st_uid)
}

// uint32 v_st_gid = 6;
inline void UpdateFileAttrRqstMsg::clear_v_st_gid() {
  v_st_gid_ = 0u;
}
inline ::google::protobuf::uint32 UpdateFileAttrRqstMsg::v_st_gid() const {
  // @@protoc_insertion_point(field_get:bgasfsmsg.UpdateFileAttrRqstMsg.v_st_gid)
  return v_st_gid_;
}
inline void UpdateFileAttrRqstMsg::set_v_st_gid(::google::protobuf::uint32 value) {
  
  v_st_gid_ = value;
  // @@protoc_insertion_point(field_set:bgasfsmsg.UpdateFileAttrRqstMsg.v_st_gid)
}

// uint32 v_st_rdev = 7;
inline void UpdateFileAttrRqstMsg::clear_v_st_rdev() {
  v_st_rdev_ = 0u;
}
inline ::google::protobuf::uint32 UpdateFileAttrRqstMsg::v_st_rdev() const {
  // @@protoc_insertion_point(field_get:bgasfsmsg.UpdateFileAttrRqstMsg.v_st_rdev)
  return v_st_rdev_;
}
inline void UpdateFileAttrRqstMsg::set_v_st_rdev(::google::protobuf::uint32 value) {
  
  v_st_rdev_ = value;
  // @@protoc_insertion_point(field_set:bgasfsmsg.UpdateFileAttrRqstMsg.v_st_rdev)
}

// uint64 v_st_size = 8;
inline void UpdateFileAttrRqstMsg::clear_v_st_size() {
  v_st_size_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 UpdateFileAttrRqstMsg::v_st_size() const {
  // @@protoc_insertion_point(field_get:bgasfsmsg.UpdateFileAttrRqstMsg.v_st_size)
  return v_st_size_;
}
inline void UpdateFileAttrRqstMsg::set_v_st_size(::google::protobuf::uint64 value) {
  
  v_st_size_ = value;
  // @@protoc_insertion_point(field_set:bgasfsmsg.UpdateFileAttrRqstMsg.v_st_size)
}

// uint32 v_st_blksize = 9;
inline void UpdateFileAttrRqstMsg::clear_v_st_blksize() {
  v_st_blksize_ = 0u;
}
inline ::google::protobuf::uint32 UpdateFileAttrRqstMsg::v_st_blksize() const {
  // @@protoc_insertion_point(field_get:bgasfsmsg.UpdateFileAttrRqstMsg.v_st_blksize)
  return v_st_blksize_;
}
inline void UpdateFileAttrRqstMsg::set_v_st_blksize(::google::protobuf::uint32 value) {
  
  v_st_blksize_ = value;
  // @@protoc_insertion_point(field_set:bgasfsmsg.UpdateFileAttrRqstMsg.v_st_blksize)
}

// uint64 v_st_atime = 10;
inline void UpdateFileAttrRqstMsg::clear_v_st_atime() {
  v_st_atime_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 UpdateFileAttrRqstMsg::v_st_atime() const {
  // @@protoc_insertion_point(field_get:bgasfsmsg.UpdateFileAttrRqstMsg.v_st_atime)
  return v_st_atime_;
}
inline void UpdateFileAttrRqstMsg::set_v_st_atime(::google::protobuf::uint64 value) {
  
  v_st_atime_ = value;
  // @@protoc_insertion_point(field_set:bgasfsmsg.UpdateFileAttrRqstMsg.v_st_atime)
}

// uint64 v_st_mtime = 11;
inline void UpdateFileAttrRqstMsg::clear_v_st_mtime() {
  v_st_mtime_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 UpdateFileAttrRqstMsg::v_st_mtime() const {
  // @@protoc_insertion_point(field_get:bgasfsmsg.UpdateFileAttrRqstMsg.v_st_mtime)
  return v_st_mtime_;
}
inline void UpdateFileAttrRqstMsg::set_v_st_mtime(::google::protobuf::uint64 value) {
  
  v_st_mtime_ = value;
  // @@protoc_insertion_point(field_set:bgasfsmsg.UpdateFileAttrRqstMsg.v_st_mtime)
}

// uint64 v_st_ctime = 12;
inline void UpdateFileAttrRqstMsg::clear_v_st_ctime() {
  v_st_ctime_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 UpdateFileAttrRqstMsg::v_st_ctime() const {
  // @@protoc_insertion_point(field_get:bgasfsmsg.UpdateFileAttrRqstMsg.v_st_ctime)
  return v_st_ctime_;
}
inline void UpdateFileAttrRqstMsg::set_v_st_ctime(::google::protobuf::uint64 value) {
  
  v_st_ctime_ = value;
  // @@protoc_insertion_point(field_set:bgasfsmsg.UpdateFileAttrRqstMsg.v_st_ctime)
}

// -------------------------------------------------------------------

// UpdateFileAttrRspMsg

// bool success = 1;
inline void UpdateFileAttrRspMsg::clear_success() {
  success_ = false;
}
inline bool UpdateFileAttrRspMsg::success() const {
  // @@protoc_insertion_point(field_get:bgasfsmsg.UpdateFileAttrRspMsg.success)
  return success_;
}
inline void UpdateFileAttrRspMsg::set_success(bool value) {
  
  success_ = value;
  // @@protoc_insertion_point(field_set:bgasfsmsg.UpdateFileAttrRspMsg.success)
}

// -------------------------------------------------------------------

// FileIORqstMsg

// string file = 1;
inline void FileIORqstMsg::clear_file() {
  file_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FileIORqstMsg::file() const {
  // @@protoc_insertion_point(field_get:bgasfsmsg.FileIORqstMsg.file)
  return file_.GetNoArena();
}
inline void FileIORqstMsg::set_file(const ::std::string& value) {
  
  file_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bgasfsmsg.FileIORqstMsg.file)
}
#if LANG_CXX11
inline void FileIORqstMsg::set_file(::std::string&& value) {
  
  file_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bgasfsmsg.FileIORqstMsg.file)
}
#endif
inline void FileIORqstMsg::set_file(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  file_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bgasfsmsg.FileIORqstMsg.file)
}
inline void FileIORqstMsg::set_file(const char* value, size_t size) {
  
  file_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bgasfsmsg.FileIORqstMsg.file)
}
inline ::std::string* FileIORqstMsg::mutable_file() {
  
  // @@protoc_insertion_point(field_mutable:bgasfsmsg.FileIORqstMsg.file)
  return file_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FileIORqstMsg::release_file() {
  // @@protoc_insertion_point(field_release:bgasfsmsg.FileIORqstMsg.file)
  
  return file_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FileIORqstMsg::set_allocated_file(::std::string* file) {
  if (file != NULL) {
    
  } else {
    
  }
  file_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), file);
  // @@protoc_insertion_point(field_set_allocated:bgasfsmsg.FileIORqstMsg.file)
}

// bool write = 2;
inline void FileIORqstMsg::clear_write() {
  write_ = false;
}
inline bool FileIORqstMsg::write() const {
  // @@protoc_insertion_point(field_get:bgasfsmsg.FileIORqstMsg.write)
  return write_;
}
inline void FileIORqstMsg::set_write(bool value) {
  
  write_ = value;
  // @@protoc_insertion_point(field_set:bgasfsmsg.FileIORqstMsg.write)
}

// -------------------------------------------------------------------

// FileIORspMsg

// string server = 1;
inline void FileIORspMsg::clear_server() {
  server_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FileIORspMsg::server() const {
  // @@protoc_insertion_point(field_get:bgasfsmsg.FileIORspMsg.server)
  return server_.GetNoArena();
}
inline void FileIORspMsg::set_server(const ::std::string& value) {
  
  server_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bgasfsmsg.FileIORspMsg.server)
}
#if LANG_CXX11
inline void FileIORspMsg::set_server(::std::string&& value) {
  
  server_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bgasfsmsg.FileIORspMsg.server)
}
#endif
inline void FileIORspMsg::set_server(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  server_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bgasfsmsg.FileIORspMsg.server)
}
inline void FileIORspMsg::set_server(const char* value, size_t size) {
  
  server_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bgasfsmsg.FileIORspMsg.server)
}
inline ::std::string* FileIORspMsg::mutable_server() {
  
  // @@protoc_insertion_point(field_mutable:bgasfsmsg.FileIORspMsg.server)
  return server_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FileIORspMsg::release_server() {
  // @@protoc_insertion_point(field_release:bgasfsmsg.FileIORspMsg.server)
  
  return server_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FileIORspMsg::set_allocated_server(::std::string* server) {
  if (server != NULL) {
    
  } else {
    
  }
  server_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), server);
  // @@protoc_insertion_point(field_set_allocated:bgasfsmsg.FileIORspMsg.server)
}

// uint64 len = 2;
inline void FileIORspMsg::clear_len() {
  len_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 FileIORspMsg::len() const {
  // @@protoc_insertion_point(field_get:bgasfsmsg.FileIORspMsg.len)
  return len_;
}
inline void FileIORspMsg::set_len(::google::protobuf::uint64 value) {
  
  len_ = value;
  // @@protoc_insertion_point(field_set:bgasfsmsg.FileIORspMsg.len)
}

// bool success = 3;
inline void FileIORspMsg::clear_success() {
  success_ = false;
}
inline bool FileIORspMsg::success() const {
  // @@protoc_insertion_point(field_get:bgasfsmsg.FileIORspMsg.success)
  return success_;
}
inline void FileIORspMsg::set_success(bool value) {
  
  success_ = value;
  // @@protoc_insertion_point(field_set:bgasfsmsg.FileIORspMsg.success)
}

// -------------------------------------------------------------------

// ClientIOReadRqstMsg

// string file = 1;
inline void ClientIOReadRqstMsg::clear_file() {
  file_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ClientIOReadRqstMsg::file() const {
  // @@protoc_insertion_point(field_get:bgasfsmsg.ClientIOReadRqstMsg.file)
  return file_.GetNoArena();
}
inline void ClientIOReadRqstMsg::set_file(const ::std::string& value) {
  
  file_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bgasfsmsg.ClientIOReadRqstMsg.file)
}
#if LANG_CXX11
inline void ClientIOReadRqstMsg::set_file(::std::string&& value) {
  
  file_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bgasfsmsg.ClientIOReadRqstMsg.file)
}
#endif
inline void ClientIOReadRqstMsg::set_file(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  file_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bgasfsmsg.ClientIOReadRqstMsg.file)
}
inline void ClientIOReadRqstMsg::set_file(const char* value, size_t size) {
  
  file_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bgasfsmsg.ClientIOReadRqstMsg.file)
}
inline ::std::string* ClientIOReadRqstMsg::mutable_file() {
  
  // @@protoc_insertion_point(field_mutable:bgasfsmsg.ClientIOReadRqstMsg.file)
  return file_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClientIOReadRqstMsg::release_file() {
  // @@protoc_insertion_point(field_release:bgasfsmsg.ClientIOReadRqstMsg.file)
  
  return file_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClientIOReadRqstMsg::set_allocated_file(::std::string* file) {
  if (file != NULL) {
    
  } else {
    
  }
  file_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), file);
  // @@protoc_insertion_point(field_set_allocated:bgasfsmsg.ClientIOReadRqstMsg.file)
}

// uint64 offset = 2;
inline void ClientIOReadRqstMsg::clear_offset() {
  offset_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ClientIOReadRqstMsg::offset() const {
  // @@protoc_insertion_point(field_get:bgasfsmsg.ClientIOReadRqstMsg.offset)
  return offset_;
}
inline void ClientIOReadRqstMsg::set_offset(::google::protobuf::uint64 value) {
  
  offset_ = value;
  // @@protoc_insertion_point(field_set:bgasfsmsg.ClientIOReadRqstMsg.offset)
}

// uint64 len = 3;
inline void ClientIOReadRqstMsg::clear_len() {
  len_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ClientIOReadRqstMsg::len() const {
  // @@protoc_insertion_point(field_get:bgasfsmsg.ClientIOReadRqstMsg.len)
  return len_;
}
inline void ClientIOReadRqstMsg::set_len(::google::protobuf::uint64 value) {
  
  len_ = value;
  // @@protoc_insertion_point(field_set:bgasfsmsg.ClientIOReadRqstMsg.len)
}

// -------------------------------------------------------------------

// ClientIOReadRspMsg

// string file = 1;
inline void ClientIOReadRspMsg::clear_file() {
  file_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ClientIOReadRspMsg::file() const {
  // @@protoc_insertion_point(field_get:bgasfsmsg.ClientIOReadRspMsg.file)
  return file_.GetNoArena();
}
inline void ClientIOReadRspMsg::set_file(const ::std::string& value) {
  
  file_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bgasfsmsg.ClientIOReadRspMsg.file)
}
#if LANG_CXX11
inline void ClientIOReadRspMsg::set_file(::std::string&& value) {
  
  file_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bgasfsmsg.ClientIOReadRspMsg.file)
}
#endif
inline void ClientIOReadRspMsg::set_file(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  file_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bgasfsmsg.ClientIOReadRspMsg.file)
}
inline void ClientIOReadRspMsg::set_file(const char* value, size_t size) {
  
  file_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bgasfsmsg.ClientIOReadRspMsg.file)
}
inline ::std::string* ClientIOReadRspMsg::mutable_file() {
  
  // @@protoc_insertion_point(field_mutable:bgasfsmsg.ClientIOReadRspMsg.file)
  return file_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClientIOReadRspMsg::release_file() {
  // @@protoc_insertion_point(field_release:bgasfsmsg.ClientIOReadRspMsg.file)
  
  return file_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClientIOReadRspMsg::set_allocated_file(::std::string* file) {
  if (file != NULL) {
    
  } else {
    
  }
  file_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), file);
  // @@protoc_insertion_point(field_set_allocated:bgasfsmsg.ClientIOReadRspMsg.file)
}

// -------------------------------------------------------------------

// ClientIOWriteRqstMsg

// string file = 1;
inline void ClientIOWriteRqstMsg::clear_file() {
  file_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ClientIOWriteRqstMsg::file() const {
  // @@protoc_insertion_point(field_get:bgasfsmsg.ClientIOWriteRqstMsg.file)
  return file_.GetNoArena();
}
inline void ClientIOWriteRqstMsg::set_file(const ::std::string& value) {
  
  file_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bgasfsmsg.ClientIOWriteRqstMsg.file)
}
#if LANG_CXX11
inline void ClientIOWriteRqstMsg::set_file(::std::string&& value) {
  
  file_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bgasfsmsg.ClientIOWriteRqstMsg.file)
}
#endif
inline void ClientIOWriteRqstMsg::set_file(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  file_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bgasfsmsg.ClientIOWriteRqstMsg.file)
}
inline void ClientIOWriteRqstMsg::set_file(const char* value, size_t size) {
  
  file_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bgasfsmsg.ClientIOWriteRqstMsg.file)
}
inline ::std::string* ClientIOWriteRqstMsg::mutable_file() {
  
  // @@protoc_insertion_point(field_mutable:bgasfsmsg.ClientIOWriteRqstMsg.file)
  return file_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClientIOWriteRqstMsg::release_file() {
  // @@protoc_insertion_point(field_release:bgasfsmsg.ClientIOWriteRqstMsg.file)
  
  return file_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClientIOWriteRqstMsg::set_allocated_file(::std::string* file) {
  if (file != NULL) {
    
  } else {
    
  }
  file_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), file);
  // @@protoc_insertion_point(field_set_allocated:bgasfsmsg.ClientIOWriteRqstMsg.file)
}

// uint64 offset = 2;
inline void ClientIOWriteRqstMsg::clear_offset() {
  offset_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ClientIOWriteRqstMsg::offset() const {
  // @@protoc_insertion_point(field_get:bgasfsmsg.ClientIOWriteRqstMsg.offset)
  return offset_;
}
inline void ClientIOWriteRqstMsg::set_offset(::google::protobuf::uint64 value) {
  
  offset_ = value;
  // @@protoc_insertion_point(field_set:bgasfsmsg.ClientIOWriteRqstMsg.offset)
}

// uint64 len = 3;
inline void ClientIOWriteRqstMsg::clear_len() {
  len_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ClientIOWriteRqstMsg::len() const {
  // @@protoc_insertion_point(field_get:bgasfsmsg.ClientIOWriteRqstMsg.len)
  return len_;
}
inline void ClientIOWriteRqstMsg::set_len(::google::protobuf::uint64 value) {
  
  len_ = value;
  // @@protoc_insertion_point(field_set:bgasfsmsg.ClientIOWriteRqstMsg.len)
}

// -------------------------------------------------------------------

// ClientIOWriteRspMsg

// string file = 1;
inline void ClientIOWriteRspMsg::clear_file() {
  file_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ClientIOWriteRspMsg::file() const {
  // @@protoc_insertion_point(field_get:bgasfsmsg.ClientIOWriteRspMsg.file)
  return file_.GetNoArena();
}
inline void ClientIOWriteRspMsg::set_file(const ::std::string& value) {
  
  file_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bgasfsmsg.ClientIOWriteRspMsg.file)
}
#if LANG_CXX11
inline void ClientIOWriteRspMsg::set_file(::std::string&& value) {
  
  file_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bgasfsmsg.ClientIOWriteRspMsg.file)
}
#endif
inline void ClientIOWriteRspMsg::set_file(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  file_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bgasfsmsg.ClientIOWriteRspMsg.file)
}
inline void ClientIOWriteRspMsg::set_file(const char* value, size_t size) {
  
  file_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bgasfsmsg.ClientIOWriteRspMsg.file)
}
inline ::std::string* ClientIOWriteRspMsg::mutable_file() {
  
  // @@protoc_insertion_point(field_mutable:bgasfsmsg.ClientIOWriteRspMsg.file)
  return file_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClientIOWriteRspMsg::release_file() {
  // @@protoc_insertion_point(field_release:bgasfsmsg.ClientIOWriteRspMsg.file)
  
  return file_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClientIOWriteRspMsg::set_allocated_file(::std::string* file) {
  if (file != NULL) {
    
  } else {
    
  }
  file_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), file);
  // @@protoc_insertion_point(field_set_allocated:bgasfsmsg.ClientIOWriteRspMsg.file)
}

// bool success = 2;
inline void ClientIOWriteRspMsg::clear_success() {
  success_ = false;
}
inline bool ClientIOWriteRspMsg::success() const {
  // @@protoc_insertion_point(field_get:bgasfsmsg.ClientIOWriteRspMsg.success)
  return success_;
}
inline void ClientIOWriteRspMsg::set_success(bool value) {
  
  success_ = value;
  // @@protoc_insertion_point(field_set:bgasfsmsg.ClientIOWriteRspMsg.success)
}

// -------------------------------------------------------------------

// DataPrefetchRqstMsg

// string file = 1;
inline void DataPrefetchRqstMsg::clear_file() {
  file_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DataPrefetchRqstMsg::file() const {
  // @@protoc_insertion_point(field_get:bgasfsmsg.DataPrefetchRqstMsg.file)
  return file_.GetNoArena();
}
inline void DataPrefetchRqstMsg::set_file(const ::std::string& value) {
  
  file_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bgasfsmsg.DataPrefetchRqstMsg.file)
}
#if LANG_CXX11
inline void DataPrefetchRqstMsg::set_file(::std::string&& value) {
  
  file_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bgasfsmsg.DataPrefetchRqstMsg.file)
}
#endif
inline void DataPrefetchRqstMsg::set_file(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  file_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bgasfsmsg.DataPrefetchRqstMsg.file)
}
inline void DataPrefetchRqstMsg::set_file(const char* value, size_t size) {
  
  file_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bgasfsmsg.DataPrefetchRqstMsg.file)
}
inline ::std::string* DataPrefetchRqstMsg::mutable_file() {
  
  // @@protoc_insertion_point(field_mutable:bgasfsmsg.DataPrefetchRqstMsg.file)
  return file_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DataPrefetchRqstMsg::release_file() {
  // @@protoc_insertion_point(field_release:bgasfsmsg.DataPrefetchRqstMsg.file)
  
  return file_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DataPrefetchRqstMsg::set_allocated_file(::std::string* file) {
  if (file != NULL) {
    
  } else {
    
  }
  file_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), file);
  // @@protoc_insertion_point(field_set_allocated:bgasfsmsg.DataPrefetchRqstMsg.file)
}

// uint64 offset = 2;
inline void DataPrefetchRqstMsg::clear_offset() {
  offset_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 DataPrefetchRqstMsg::offset() const {
  // @@protoc_insertion_point(field_get:bgasfsmsg.DataPrefetchRqstMsg.offset)
  return offset_;
}
inline void DataPrefetchRqstMsg::set_offset(::google::protobuf::uint64 value) {
  
  offset_ = value;
  // @@protoc_insertion_point(field_set:bgasfsmsg.DataPrefetchRqstMsg.offset)
}

// uint64 len = 3;
inline void DataPrefetchRqstMsg::clear_len() {
  len_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 DataPrefetchRqstMsg::len() const {
  // @@protoc_insertion_point(field_get:bgasfsmsg.DataPrefetchRqstMsg.len)
  return len_;
}
inline void DataPrefetchRqstMsg::set_len(::google::protobuf::uint64 value) {
  
  len_ = value;
  // @@protoc_insertion_point(field_set:bgasfsmsg.DataPrefetchRqstMsg.len)
}

// -------------------------------------------------------------------

// DataPrefetchRspMsg

// string file = 1;
inline void DataPrefetchRspMsg::clear_file() {
  file_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DataPrefetchRspMsg::file() const {
  // @@protoc_insertion_point(field_get:bgasfsmsg.DataPrefetchRspMsg.file)
  return file_.GetNoArena();
}
inline void DataPrefetchRspMsg::set_file(const ::std::string& value) {
  
  file_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bgasfsmsg.DataPrefetchRspMsg.file)
}
#if LANG_CXX11
inline void DataPrefetchRspMsg::set_file(::std::string&& value) {
  
  file_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bgasfsmsg.DataPrefetchRspMsg.file)
}
#endif
inline void DataPrefetchRspMsg::set_file(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  file_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bgasfsmsg.DataPrefetchRspMsg.file)
}
inline void DataPrefetchRspMsg::set_file(const char* value, size_t size) {
  
  file_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bgasfsmsg.DataPrefetchRspMsg.file)
}
inline ::std::string* DataPrefetchRspMsg::mutable_file() {
  
  // @@protoc_insertion_point(field_mutable:bgasfsmsg.DataPrefetchRspMsg.file)
  return file_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DataPrefetchRspMsg::release_file() {
  // @@protoc_insertion_point(field_release:bgasfsmsg.DataPrefetchRspMsg.file)
  
  return file_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DataPrefetchRspMsg::set_allocated_file(::std::string* file) {
  if (file != NULL) {
    
  } else {
    
  }
  file_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), file);
  // @@protoc_insertion_point(field_set_allocated:bgasfsmsg.DataPrefetchRspMsg.file)
}

// bool success = 2;
inline void DataPrefetchRspMsg::clear_success() {
  success_ = false;
}
inline bool DataPrefetchRspMsg::success() const {
  // @@protoc_insertion_point(field_get:bgasfsmsg.DataPrefetchRspMsg.success)
  return success_;
}
inline void DataPrefetchRspMsg::set_success(bool value) {
  
  success_ = value;
  // @@protoc_insertion_point(field_set:bgasfsmsg.DataPrefetchRspMsg.success)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace bgasfsmsg

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_bgasfs_2eproto__INCLUDED
