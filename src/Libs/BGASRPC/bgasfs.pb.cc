// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bgasfs.proto

#include "bgasfs.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
namespace bgasfsmsg {
class FileAttrRqstMsgDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<FileAttrRqstMsg> _instance;
} _FileAttrRqstMsg_default_instance_;
class FileAttrRspMsgDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<FileAttrRspMsg> _instance;
} _FileAttrRspMsg_default_instance_;
class UpdateFileAttrRqstMsgDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UpdateFileAttrRqstMsg> _instance;
} _UpdateFileAttrRqstMsg_default_instance_;
class UpdateFileAttrRspMsgDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UpdateFileAttrRspMsg> _instance;
} _UpdateFileAttrRspMsg_default_instance_;
class FileIORqstMsgDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<FileIORqstMsg> _instance;
} _FileIORqstMsg_default_instance_;
class FileIORspMsgDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<FileIORspMsg> _instance;
} _FileIORspMsg_default_instance_;
class ClientIOReadRqstMsgDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ClientIOReadRqstMsg> _instance;
} _ClientIOReadRqstMsg_default_instance_;
class ClientIOReadRspMsgDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ClientIOReadRspMsg> _instance;
} _ClientIOReadRspMsg_default_instance_;
class ClientIOWriteRqstMsgDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ClientIOWriteRqstMsg> _instance;
} _ClientIOWriteRqstMsg_default_instance_;
class ClientIOWriteRspMsgDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ClientIOWriteRspMsg> _instance;
} _ClientIOWriteRspMsg_default_instance_;
class DataPrefetchRqstMsgDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DataPrefetchRqstMsg> _instance;
} _DataPrefetchRqstMsg_default_instance_;
class DataPrefetchRspMsgDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DataPrefetchRspMsg> _instance;
} _DataPrefetchRspMsg_default_instance_;
}  // namespace bgasfsmsg
static void InitDefaultsscc_info_ClientIOReadRqstMsg_bgasfs_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bgasfsmsg::_ClientIOReadRqstMsg_default_instance_;
    new (ptr) ::bgasfsmsg::ClientIOReadRqstMsg();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bgasfsmsg::ClientIOReadRqstMsg::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ClientIOReadRqstMsg_bgasfs_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ClientIOReadRqstMsg_bgasfs_2eproto}, {}};

static void InitDefaultsscc_info_ClientIOReadRspMsg_bgasfs_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bgasfsmsg::_ClientIOReadRspMsg_default_instance_;
    new (ptr) ::bgasfsmsg::ClientIOReadRspMsg();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bgasfsmsg::ClientIOReadRspMsg::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ClientIOReadRspMsg_bgasfs_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ClientIOReadRspMsg_bgasfs_2eproto}, {}};

static void InitDefaultsscc_info_ClientIOWriteRqstMsg_bgasfs_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bgasfsmsg::_ClientIOWriteRqstMsg_default_instance_;
    new (ptr) ::bgasfsmsg::ClientIOWriteRqstMsg();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bgasfsmsg::ClientIOWriteRqstMsg::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ClientIOWriteRqstMsg_bgasfs_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ClientIOWriteRqstMsg_bgasfs_2eproto}, {}};

static void InitDefaultsscc_info_ClientIOWriteRspMsg_bgasfs_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bgasfsmsg::_ClientIOWriteRspMsg_default_instance_;
    new (ptr) ::bgasfsmsg::ClientIOWriteRspMsg();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bgasfsmsg::ClientIOWriteRspMsg::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ClientIOWriteRspMsg_bgasfs_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ClientIOWriteRspMsg_bgasfs_2eproto}, {}};

static void InitDefaultsscc_info_DataPrefetchRqstMsg_bgasfs_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bgasfsmsg::_DataPrefetchRqstMsg_default_instance_;
    new (ptr) ::bgasfsmsg::DataPrefetchRqstMsg();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bgasfsmsg::DataPrefetchRqstMsg::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DataPrefetchRqstMsg_bgasfs_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DataPrefetchRqstMsg_bgasfs_2eproto}, {}};

static void InitDefaultsscc_info_DataPrefetchRspMsg_bgasfs_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bgasfsmsg::_DataPrefetchRspMsg_default_instance_;
    new (ptr) ::bgasfsmsg::DataPrefetchRspMsg();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bgasfsmsg::DataPrefetchRspMsg::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DataPrefetchRspMsg_bgasfs_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DataPrefetchRspMsg_bgasfs_2eproto}, {}};

static void InitDefaultsscc_info_FileAttrRqstMsg_bgasfs_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bgasfsmsg::_FileAttrRqstMsg_default_instance_;
    new (ptr) ::bgasfsmsg::FileAttrRqstMsg();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bgasfsmsg::FileAttrRqstMsg::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_FileAttrRqstMsg_bgasfs_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_FileAttrRqstMsg_bgasfs_2eproto}, {}};

static void InitDefaultsscc_info_FileAttrRspMsg_bgasfs_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bgasfsmsg::_FileAttrRspMsg_default_instance_;
    new (ptr) ::bgasfsmsg::FileAttrRspMsg();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bgasfsmsg::FileAttrRspMsg::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_FileAttrRspMsg_bgasfs_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_FileAttrRspMsg_bgasfs_2eproto}, {}};

static void InitDefaultsscc_info_FileIORqstMsg_bgasfs_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bgasfsmsg::_FileIORqstMsg_default_instance_;
    new (ptr) ::bgasfsmsg::FileIORqstMsg();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bgasfsmsg::FileIORqstMsg::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_FileIORqstMsg_bgasfs_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_FileIORqstMsg_bgasfs_2eproto}, {}};

static void InitDefaultsscc_info_FileIORspMsg_bgasfs_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bgasfsmsg::_FileIORspMsg_default_instance_;
    new (ptr) ::bgasfsmsg::FileIORspMsg();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bgasfsmsg::FileIORspMsg::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_FileIORspMsg_bgasfs_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_FileIORspMsg_bgasfs_2eproto}, {}};

static void InitDefaultsscc_info_UpdateFileAttrRqstMsg_bgasfs_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bgasfsmsg::_UpdateFileAttrRqstMsg_default_instance_;
    new (ptr) ::bgasfsmsg::UpdateFileAttrRqstMsg();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bgasfsmsg::UpdateFileAttrRqstMsg::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UpdateFileAttrRqstMsg_bgasfs_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_UpdateFileAttrRqstMsg_bgasfs_2eproto}, {}};

static void InitDefaultsscc_info_UpdateFileAttrRspMsg_bgasfs_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bgasfsmsg::_UpdateFileAttrRspMsg_default_instance_;
    new (ptr) ::bgasfsmsg::UpdateFileAttrRspMsg();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bgasfsmsg::UpdateFileAttrRspMsg::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UpdateFileAttrRspMsg_bgasfs_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_UpdateFileAttrRspMsg_bgasfs_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_bgasfs_2eproto[12];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_bgasfs_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_bgasfs_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_bgasfs_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bgasfsmsg::FileAttrRqstMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bgasfsmsg::FileAttrRqstMsg, file_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bgasfsmsg::FileAttrRspMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bgasfsmsg::FileAttrRspMsg, file_),
  PROTOBUF_FIELD_OFFSET(::bgasfsmsg::FileAttrRspMsg, v_st_dev_),
  PROTOBUF_FIELD_OFFSET(::bgasfsmsg::FileAttrRspMsg, v_st_mode_),
  PROTOBUF_FIELD_OFFSET(::bgasfsmsg::FileAttrRspMsg, v_st_nlink_),
  PROTOBUF_FIELD_OFFSET(::bgasfsmsg::FileAttrRspMsg, v_st_uid_),
  PROTOBUF_FIELD_OFFSET(::bgasfsmsg::FileAttrRspMsg, v_st_gid_),
  PROTOBUF_FIELD_OFFSET(::bgasfsmsg::FileAttrRspMsg, v_st_rdev_),
  PROTOBUF_FIELD_OFFSET(::bgasfsmsg::FileAttrRspMsg, v_st_size_),
  PROTOBUF_FIELD_OFFSET(::bgasfsmsg::FileAttrRspMsg, v_st_blksize_),
  PROTOBUF_FIELD_OFFSET(::bgasfsmsg::FileAttrRspMsg, v_st_atime_),
  PROTOBUF_FIELD_OFFSET(::bgasfsmsg::FileAttrRspMsg, v_st_mtime_),
  PROTOBUF_FIELD_OFFSET(::bgasfsmsg::FileAttrRspMsg, v_st_ctime_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bgasfsmsg::UpdateFileAttrRqstMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bgasfsmsg::UpdateFileAttrRqstMsg, file_),
  PROTOBUF_FIELD_OFFSET(::bgasfsmsg::UpdateFileAttrRqstMsg, v_st_dev_),
  PROTOBUF_FIELD_OFFSET(::bgasfsmsg::UpdateFileAttrRqstMsg, v_st_mode_),
  PROTOBUF_FIELD_OFFSET(::bgasfsmsg::UpdateFileAttrRqstMsg, v_st_nlink_),
  PROTOBUF_FIELD_OFFSET(::bgasfsmsg::UpdateFileAttrRqstMsg, v_st_uid_),
  PROTOBUF_FIELD_OFFSET(::bgasfsmsg::UpdateFileAttrRqstMsg, v_st_gid_),
  PROTOBUF_FIELD_OFFSET(::bgasfsmsg::UpdateFileAttrRqstMsg, v_st_rdev_),
  PROTOBUF_FIELD_OFFSET(::bgasfsmsg::UpdateFileAttrRqstMsg, v_st_size_),
  PROTOBUF_FIELD_OFFSET(::bgasfsmsg::UpdateFileAttrRqstMsg, v_st_blksize_),
  PROTOBUF_FIELD_OFFSET(::bgasfsmsg::UpdateFileAttrRqstMsg, v_st_atime_),
  PROTOBUF_FIELD_OFFSET(::bgasfsmsg::UpdateFileAttrRqstMsg, v_st_mtime_),
  PROTOBUF_FIELD_OFFSET(::bgasfsmsg::UpdateFileAttrRqstMsg, v_st_ctime_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bgasfsmsg::UpdateFileAttrRspMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bgasfsmsg::UpdateFileAttrRspMsg, success_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bgasfsmsg::FileIORqstMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bgasfsmsg::FileIORqstMsg, file_),
  PROTOBUF_FIELD_OFFSET(::bgasfsmsg::FileIORqstMsg, write_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bgasfsmsg::FileIORspMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bgasfsmsg::FileIORspMsg, server_),
  PROTOBUF_FIELD_OFFSET(::bgasfsmsg::FileIORspMsg, len_),
  PROTOBUF_FIELD_OFFSET(::bgasfsmsg::FileIORspMsg, success_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bgasfsmsg::ClientIOReadRqstMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bgasfsmsg::ClientIOReadRqstMsg, file_),
  PROTOBUF_FIELD_OFFSET(::bgasfsmsg::ClientIOReadRqstMsg, offset_),
  PROTOBUF_FIELD_OFFSET(::bgasfsmsg::ClientIOReadRqstMsg, len_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bgasfsmsg::ClientIOReadRspMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bgasfsmsg::ClientIOReadRspMsg, file_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bgasfsmsg::ClientIOWriteRqstMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bgasfsmsg::ClientIOWriteRqstMsg, file_),
  PROTOBUF_FIELD_OFFSET(::bgasfsmsg::ClientIOWriteRqstMsg, offset_),
  PROTOBUF_FIELD_OFFSET(::bgasfsmsg::ClientIOWriteRqstMsg, len_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bgasfsmsg::ClientIOWriteRspMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bgasfsmsg::ClientIOWriteRspMsg, file_),
  PROTOBUF_FIELD_OFFSET(::bgasfsmsg::ClientIOWriteRspMsg, success_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bgasfsmsg::DataPrefetchRqstMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bgasfsmsg::DataPrefetchRqstMsg, file_),
  PROTOBUF_FIELD_OFFSET(::bgasfsmsg::DataPrefetchRqstMsg, offset_),
  PROTOBUF_FIELD_OFFSET(::bgasfsmsg::DataPrefetchRqstMsg, len_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bgasfsmsg::DataPrefetchRspMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bgasfsmsg::DataPrefetchRspMsg, file_),
  PROTOBUF_FIELD_OFFSET(::bgasfsmsg::DataPrefetchRspMsg, success_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::bgasfsmsg::FileAttrRqstMsg)},
  { 6, -1, sizeof(::bgasfsmsg::FileAttrRspMsg)},
  { 23, -1, sizeof(::bgasfsmsg::UpdateFileAttrRqstMsg)},
  { 40, -1, sizeof(::bgasfsmsg::UpdateFileAttrRspMsg)},
  { 46, -1, sizeof(::bgasfsmsg::FileIORqstMsg)},
  { 53, -1, sizeof(::bgasfsmsg::FileIORspMsg)},
  { 61, -1, sizeof(::bgasfsmsg::ClientIOReadRqstMsg)},
  { 69, -1, sizeof(::bgasfsmsg::ClientIOReadRspMsg)},
  { 75, -1, sizeof(::bgasfsmsg::ClientIOWriteRqstMsg)},
  { 83, -1, sizeof(::bgasfsmsg::ClientIOWriteRspMsg)},
  { 90, -1, sizeof(::bgasfsmsg::DataPrefetchRqstMsg)},
  { 98, -1, sizeof(::bgasfsmsg::DataPrefetchRspMsg)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bgasfsmsg::_FileAttrRqstMsg_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bgasfsmsg::_FileAttrRspMsg_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bgasfsmsg::_UpdateFileAttrRqstMsg_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bgasfsmsg::_UpdateFileAttrRspMsg_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bgasfsmsg::_FileIORqstMsg_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bgasfsmsg::_FileIORspMsg_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bgasfsmsg::_ClientIOReadRqstMsg_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bgasfsmsg::_ClientIOReadRspMsg_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bgasfsmsg::_ClientIOWriteRqstMsg_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bgasfsmsg::_ClientIOWriteRspMsg_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bgasfsmsg::_DataPrefetchRqstMsg_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bgasfsmsg::_DataPrefetchRspMsg_default_instance_),
};

const char descriptor_table_protodef_bgasfs_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\014bgasfs.proto\022\tbgasfsmsg\"\037\n\017FileAttrRqs"
  "tMsg\022\014\n\004file\030\001 \001(\t\"\363\001\n\016FileAttrRspMsg\022\014\n"
  "\004file\030\001 \001(\t\022\020\n\010v_st_dev\030\002 \001(\r\022\021\n\tv_st_mo"
  "de\030\003 \001(\r\022\022\n\nv_st_nlink\030\004 \001(\r\022\020\n\010v_st_uid"
  "\030\005 \001(\r\022\020\n\010v_st_gid\030\006 \001(\r\022\021\n\tv_st_rdev\030\007 "
  "\001(\r\022\021\n\tv_st_size\030\010 \001(\004\022\024\n\014v_st_blksize\030\t"
  " \001(\r\022\022\n\nv_st_atime\030\n \001(\004\022\022\n\nv_st_mtime\030\013"
  " \001(\004\022\022\n\nv_st_ctime\030\014 \001(\004\"\372\001\n\025UpdateFileA"
  "ttrRqstMsg\022\014\n\004file\030\001 \001(\t\022\020\n\010v_st_dev\030\002 \001"
  "(\r\022\021\n\tv_st_mode\030\003 \001(\r\022\022\n\nv_st_nlink\030\004 \001("
  "\r\022\020\n\010v_st_uid\030\005 \001(\r\022\020\n\010v_st_gid\030\006 \001(\r\022\021\n"
  "\tv_st_rdev\030\007 \001(\r\022\021\n\tv_st_size\030\010 \001(\004\022\024\n\014v"
  "_st_blksize\030\t \001(\r\022\022\n\nv_st_atime\030\n \001(\004\022\022\n"
  "\nv_st_mtime\030\013 \001(\004\022\022\n\nv_st_ctime\030\014 \001(\004\"\'\n"
  "\024UpdateFileAttrRspMsg\022\017\n\007success\030\001 \001(\010\","
  "\n\rFileIORqstMsg\022\014\n\004file\030\001 \001(\t\022\r\n\005write\030\002"
  " \001(\010\"<\n\014FileIORspMsg\022\016\n\006server\030\001 \001(\t\022\013\n\003"
  "len\030\002 \001(\004\022\017\n\007success\030\003 \001(\010\"@\n\023ClientIORe"
  "adRqstMsg\022\014\n\004file\030\001 \001(\t\022\016\n\006offset\030\002 \001(\004\022"
  "\013\n\003len\030\003 \001(\004\"\"\n\022ClientIOReadRspMsg\022\014\n\004fi"
  "le\030\001 \001(\t\"A\n\024ClientIOWriteRqstMsg\022\014\n\004file"
  "\030\001 \001(\t\022\016\n\006offset\030\002 \001(\004\022\013\n\003len\030\003 \001(\004\"4\n\023C"
  "lientIOWriteRspMsg\022\014\n\004file\030\001 \001(\t\022\017\n\007succ"
  "ess\030\002 \001(\010\"@\n\023DataPrefetchRqstMsg\022\014\n\004file"
  "\030\001 \001(\t\022\016\n\006offset\030\002 \001(\004\022\013\n\003len\030\003 \001(\004\"3\n\022D"
  "ataPrefetchRspMsg\022\014\n\004file\030\001 \001(\t\022\017\n\007succe"
  "ss\030\002 \001(\0102\375\003\n\tBGASFSMsg\022M\n\022ClientRqstFile"
  "Attr\022\032.bgasfsmsg.FileAttrRqstMsg\032\031.bgasf"
  "smsg.FileAttrRspMsg\"\000\022_\n\030ClientRqstUpdat"
  "eFileAttr\022 .bgasfsmsg.UpdateFileAttrRqst"
  "Msg\032\037.bgasfsmsg.UpdateFileAttrRspMsg\"\000\022C"
  "\n\014ClientRqstIO\022\030.bgasfsmsg.FileIORqstMsg"
  "\032\027.bgasfsmsg.FileIORspMsg\"\000\022Q\n\016ClientRea"
  "dRqst\022\036.bgasfsmsg.ClientIOReadRqstMsg\032\035."
  "bgasfsmsg.ClientIOReadRspMsg\"\000\022T\n\017Client"
  "WriteRqst\022\037.bgasfsmsg.ClientIOWriteRqstM"
  "sg\032\036.bgasfsmsg.ClientIOWriteRspMsg\"\000\022R\n\017"
  "MDSDataPrefetch\022\036.bgasfsmsg.DataPrefetch"
  "RqstMsg\032\035.bgasfsmsg.DataPrefetchRspMsg\"\000"
  "B)\n\021io.grpc.bgasfsmsgB\tBGASFSMsgP\001\242\002\006BGA"
  "SFSb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_bgasfs_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_bgasfs_2eproto_sccs[12] = {
  &scc_info_ClientIOReadRqstMsg_bgasfs_2eproto.base,
  &scc_info_ClientIOReadRspMsg_bgasfs_2eproto.base,
  &scc_info_ClientIOWriteRqstMsg_bgasfs_2eproto.base,
  &scc_info_ClientIOWriteRspMsg_bgasfs_2eproto.base,
  &scc_info_DataPrefetchRqstMsg_bgasfs_2eproto.base,
  &scc_info_DataPrefetchRspMsg_bgasfs_2eproto.base,
  &scc_info_FileAttrRqstMsg_bgasfs_2eproto.base,
  &scc_info_FileAttrRspMsg_bgasfs_2eproto.base,
  &scc_info_FileIORqstMsg_bgasfs_2eproto.base,
  &scc_info_FileIORspMsg_bgasfs_2eproto.base,
  &scc_info_UpdateFileAttrRqstMsg_bgasfs_2eproto.base,
  &scc_info_UpdateFileAttrRspMsg_bgasfs_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_bgasfs_2eproto_once;
static bool descriptor_table_bgasfs_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_bgasfs_2eproto = {
  &descriptor_table_bgasfs_2eproto_initialized, descriptor_table_protodef_bgasfs_2eproto, "bgasfs.proto", 1611,
  &descriptor_table_bgasfs_2eproto_once, descriptor_table_bgasfs_2eproto_sccs, descriptor_table_bgasfs_2eproto_deps, 12, 0,
  schemas, file_default_instances, TableStruct_bgasfs_2eproto::offsets,
  file_level_metadata_bgasfs_2eproto, 12, file_level_enum_descriptors_bgasfs_2eproto, file_level_service_descriptors_bgasfs_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_bgasfs_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_bgasfs_2eproto)), true);
namespace bgasfsmsg {

// ===================================================================

void FileAttrRqstMsg::InitAsDefaultInstance() {
}
class FileAttrRqstMsg::_Internal {
 public:
};

FileAttrRqstMsg::FileAttrRqstMsg()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgasfsmsg.FileAttrRqstMsg)
}
FileAttrRqstMsg::FileAttrRqstMsg(const FileAttrRqstMsg& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  file_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_file().empty()) {
    file_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.file_);
  }
  // @@protoc_insertion_point(copy_constructor:bgasfsmsg.FileAttrRqstMsg)
}

void FileAttrRqstMsg::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_FileAttrRqstMsg_bgasfs_2eproto.base);
  file_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

FileAttrRqstMsg::~FileAttrRqstMsg() {
  // @@protoc_insertion_point(destructor:bgasfsmsg.FileAttrRqstMsg)
  SharedDtor();
}

void FileAttrRqstMsg::SharedDtor() {
  file_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void FileAttrRqstMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const FileAttrRqstMsg& FileAttrRqstMsg::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_FileAttrRqstMsg_bgasfs_2eproto.base);
  return *internal_default_instance();
}


void FileAttrRqstMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:bgasfsmsg.FileAttrRqstMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  file_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

const char* FileAttrRqstMsg::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string file = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_file();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "bgasfsmsg.FileAttrRqstMsg.file"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FileAttrRqstMsg::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bgasfsmsg.FileAttrRqstMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string file = 1;
  if (this->file().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_file().data(), static_cast<int>(this->_internal_file().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "bgasfsmsg.FileAttrRqstMsg.file");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_file(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bgasfsmsg.FileAttrRqstMsg)
  return target;
}

size_t FileAttrRqstMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bgasfsmsg.FileAttrRqstMsg)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string file = 1;
  if (this->file().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_file());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FileAttrRqstMsg::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bgasfsmsg.FileAttrRqstMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const FileAttrRqstMsg* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FileAttrRqstMsg>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bgasfsmsg.FileAttrRqstMsg)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bgasfsmsg.FileAttrRqstMsg)
    MergeFrom(*source);
  }
}

void FileAttrRqstMsg::MergeFrom(const FileAttrRqstMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bgasfsmsg.FileAttrRqstMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.file().size() > 0) {

    file_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.file_);
  }
}

void FileAttrRqstMsg::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bgasfsmsg.FileAttrRqstMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileAttrRqstMsg::CopyFrom(const FileAttrRqstMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bgasfsmsg.FileAttrRqstMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileAttrRqstMsg::IsInitialized() const {
  return true;
}

void FileAttrRqstMsg::InternalSwap(FileAttrRqstMsg* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  file_.Swap(&other->file_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata FileAttrRqstMsg::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void FileAttrRspMsg::InitAsDefaultInstance() {
}
class FileAttrRspMsg::_Internal {
 public:
};

FileAttrRspMsg::FileAttrRspMsg()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgasfsmsg.FileAttrRspMsg)
}
FileAttrRspMsg::FileAttrRspMsg(const FileAttrRspMsg& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  file_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_file().empty()) {
    file_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.file_);
  }
  ::memcpy(&v_st_dev_, &from.v_st_dev_,
    static_cast<size_t>(reinterpret_cast<char*>(&v_st_blksize_) -
    reinterpret_cast<char*>(&v_st_dev_)) + sizeof(v_st_blksize_));
  // @@protoc_insertion_point(copy_constructor:bgasfsmsg.FileAttrRspMsg)
}

void FileAttrRspMsg::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_FileAttrRspMsg_bgasfs_2eproto.base);
  file_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&v_st_dev_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&v_st_blksize_) -
      reinterpret_cast<char*>(&v_st_dev_)) + sizeof(v_st_blksize_));
}

FileAttrRspMsg::~FileAttrRspMsg() {
  // @@protoc_insertion_point(destructor:bgasfsmsg.FileAttrRspMsg)
  SharedDtor();
}

void FileAttrRspMsg::SharedDtor() {
  file_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void FileAttrRspMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const FileAttrRspMsg& FileAttrRspMsg::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_FileAttrRspMsg_bgasfs_2eproto.base);
  return *internal_default_instance();
}


void FileAttrRspMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:bgasfsmsg.FileAttrRspMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  file_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&v_st_dev_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&v_st_blksize_) -
      reinterpret_cast<char*>(&v_st_dev_)) + sizeof(v_st_blksize_));
  _internal_metadata_.Clear();
}

const char* FileAttrRspMsg::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string file = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_file();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "bgasfsmsg.FileAttrRspMsg.file"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 v_st_dev = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          v_st_dev_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 v_st_mode = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          v_st_mode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 v_st_nlink = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          v_st_nlink_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 v_st_uid = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          v_st_uid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 v_st_gid = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          v_st_gid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 v_st_rdev = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          v_st_rdev_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 v_st_size = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          v_st_size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 v_st_blksize = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 72)) {
          v_st_blksize_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 v_st_atime = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          v_st_atime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 v_st_mtime = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 88)) {
          v_st_mtime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 v_st_ctime = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 96)) {
          v_st_ctime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FileAttrRspMsg::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bgasfsmsg.FileAttrRspMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string file = 1;
  if (this->file().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_file().data(), static_cast<int>(this->_internal_file().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "bgasfsmsg.FileAttrRspMsg.file");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_file(), target);
  }

  // uint32 v_st_dev = 2;
  if (this->v_st_dev() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_v_st_dev(), target);
  }

  // uint32 v_st_mode = 3;
  if (this->v_st_mode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_v_st_mode(), target);
  }

  // uint32 v_st_nlink = 4;
  if (this->v_st_nlink() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_v_st_nlink(), target);
  }

  // uint32 v_st_uid = 5;
  if (this->v_st_uid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(5, this->_internal_v_st_uid(), target);
  }

  // uint32 v_st_gid = 6;
  if (this->v_st_gid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(6, this->_internal_v_st_gid(), target);
  }

  // uint32 v_st_rdev = 7;
  if (this->v_st_rdev() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(7, this->_internal_v_st_rdev(), target);
  }

  // uint64 v_st_size = 8;
  if (this->v_st_size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(8, this->_internal_v_st_size(), target);
  }

  // uint32 v_st_blksize = 9;
  if (this->v_st_blksize() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(9, this->_internal_v_st_blksize(), target);
  }

  // uint64 v_st_atime = 10;
  if (this->v_st_atime() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(10, this->_internal_v_st_atime(), target);
  }

  // uint64 v_st_mtime = 11;
  if (this->v_st_mtime() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(11, this->_internal_v_st_mtime(), target);
  }

  // uint64 v_st_ctime = 12;
  if (this->v_st_ctime() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(12, this->_internal_v_st_ctime(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bgasfsmsg.FileAttrRspMsg)
  return target;
}

size_t FileAttrRspMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bgasfsmsg.FileAttrRspMsg)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string file = 1;
  if (this->file().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_file());
  }

  // uint32 v_st_dev = 2;
  if (this->v_st_dev() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_v_st_dev());
  }

  // uint32 v_st_mode = 3;
  if (this->v_st_mode() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_v_st_mode());
  }

  // uint32 v_st_nlink = 4;
  if (this->v_st_nlink() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_v_st_nlink());
  }

  // uint32 v_st_uid = 5;
  if (this->v_st_uid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_v_st_uid());
  }

  // uint32 v_st_gid = 6;
  if (this->v_st_gid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_v_st_gid());
  }

  // uint32 v_st_rdev = 7;
  if (this->v_st_rdev() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_v_st_rdev());
  }

  // uint64 v_st_size = 8;
  if (this->v_st_size() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_v_st_size());
  }

  // uint64 v_st_atime = 10;
  if (this->v_st_atime() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_v_st_atime());
  }

  // uint64 v_st_mtime = 11;
  if (this->v_st_mtime() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_v_st_mtime());
  }

  // uint64 v_st_ctime = 12;
  if (this->v_st_ctime() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_v_st_ctime());
  }

  // uint32 v_st_blksize = 9;
  if (this->v_st_blksize() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_v_st_blksize());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FileAttrRspMsg::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bgasfsmsg.FileAttrRspMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const FileAttrRspMsg* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FileAttrRspMsg>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bgasfsmsg.FileAttrRspMsg)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bgasfsmsg.FileAttrRspMsg)
    MergeFrom(*source);
  }
}

void FileAttrRspMsg::MergeFrom(const FileAttrRspMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bgasfsmsg.FileAttrRspMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.file().size() > 0) {

    file_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.file_);
  }
  if (from.v_st_dev() != 0) {
    _internal_set_v_st_dev(from._internal_v_st_dev());
  }
  if (from.v_st_mode() != 0) {
    _internal_set_v_st_mode(from._internal_v_st_mode());
  }
  if (from.v_st_nlink() != 0) {
    _internal_set_v_st_nlink(from._internal_v_st_nlink());
  }
  if (from.v_st_uid() != 0) {
    _internal_set_v_st_uid(from._internal_v_st_uid());
  }
  if (from.v_st_gid() != 0) {
    _internal_set_v_st_gid(from._internal_v_st_gid());
  }
  if (from.v_st_rdev() != 0) {
    _internal_set_v_st_rdev(from._internal_v_st_rdev());
  }
  if (from.v_st_size() != 0) {
    _internal_set_v_st_size(from._internal_v_st_size());
  }
  if (from.v_st_atime() != 0) {
    _internal_set_v_st_atime(from._internal_v_st_atime());
  }
  if (from.v_st_mtime() != 0) {
    _internal_set_v_st_mtime(from._internal_v_st_mtime());
  }
  if (from.v_st_ctime() != 0) {
    _internal_set_v_st_ctime(from._internal_v_st_ctime());
  }
  if (from.v_st_blksize() != 0) {
    _internal_set_v_st_blksize(from._internal_v_st_blksize());
  }
}

void FileAttrRspMsg::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bgasfsmsg.FileAttrRspMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileAttrRspMsg::CopyFrom(const FileAttrRspMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bgasfsmsg.FileAttrRspMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileAttrRspMsg::IsInitialized() const {
  return true;
}

void FileAttrRspMsg::InternalSwap(FileAttrRspMsg* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  file_.Swap(&other->file_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(v_st_dev_, other->v_st_dev_);
  swap(v_st_mode_, other->v_st_mode_);
  swap(v_st_nlink_, other->v_st_nlink_);
  swap(v_st_uid_, other->v_st_uid_);
  swap(v_st_gid_, other->v_st_gid_);
  swap(v_st_rdev_, other->v_st_rdev_);
  swap(v_st_size_, other->v_st_size_);
  swap(v_st_atime_, other->v_st_atime_);
  swap(v_st_mtime_, other->v_st_mtime_);
  swap(v_st_ctime_, other->v_st_ctime_);
  swap(v_st_blksize_, other->v_st_blksize_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FileAttrRspMsg::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UpdateFileAttrRqstMsg::InitAsDefaultInstance() {
}
class UpdateFileAttrRqstMsg::_Internal {
 public:
};

UpdateFileAttrRqstMsg::UpdateFileAttrRqstMsg()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgasfsmsg.UpdateFileAttrRqstMsg)
}
UpdateFileAttrRqstMsg::UpdateFileAttrRqstMsg(const UpdateFileAttrRqstMsg& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  file_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_file().empty()) {
    file_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.file_);
  }
  ::memcpy(&v_st_dev_, &from.v_st_dev_,
    static_cast<size_t>(reinterpret_cast<char*>(&v_st_blksize_) -
    reinterpret_cast<char*>(&v_st_dev_)) + sizeof(v_st_blksize_));
  // @@protoc_insertion_point(copy_constructor:bgasfsmsg.UpdateFileAttrRqstMsg)
}

void UpdateFileAttrRqstMsg::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UpdateFileAttrRqstMsg_bgasfs_2eproto.base);
  file_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&v_st_dev_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&v_st_blksize_) -
      reinterpret_cast<char*>(&v_st_dev_)) + sizeof(v_st_blksize_));
}

UpdateFileAttrRqstMsg::~UpdateFileAttrRqstMsg() {
  // @@protoc_insertion_point(destructor:bgasfsmsg.UpdateFileAttrRqstMsg)
  SharedDtor();
}

void UpdateFileAttrRqstMsg::SharedDtor() {
  file_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void UpdateFileAttrRqstMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpdateFileAttrRqstMsg& UpdateFileAttrRqstMsg::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UpdateFileAttrRqstMsg_bgasfs_2eproto.base);
  return *internal_default_instance();
}


void UpdateFileAttrRqstMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:bgasfsmsg.UpdateFileAttrRqstMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  file_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&v_st_dev_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&v_st_blksize_) -
      reinterpret_cast<char*>(&v_st_dev_)) + sizeof(v_st_blksize_));
  _internal_metadata_.Clear();
}

const char* UpdateFileAttrRqstMsg::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string file = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_file();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "bgasfsmsg.UpdateFileAttrRqstMsg.file"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 v_st_dev = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          v_st_dev_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 v_st_mode = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          v_st_mode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 v_st_nlink = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          v_st_nlink_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 v_st_uid = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          v_st_uid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 v_st_gid = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          v_st_gid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 v_st_rdev = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          v_st_rdev_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 v_st_size = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          v_st_size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 v_st_blksize = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 72)) {
          v_st_blksize_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 v_st_atime = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          v_st_atime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 v_st_mtime = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 88)) {
          v_st_mtime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 v_st_ctime = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 96)) {
          v_st_ctime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateFileAttrRqstMsg::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bgasfsmsg.UpdateFileAttrRqstMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string file = 1;
  if (this->file().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_file().data(), static_cast<int>(this->_internal_file().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "bgasfsmsg.UpdateFileAttrRqstMsg.file");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_file(), target);
  }

  // uint32 v_st_dev = 2;
  if (this->v_st_dev() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_v_st_dev(), target);
  }

  // uint32 v_st_mode = 3;
  if (this->v_st_mode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_v_st_mode(), target);
  }

  // uint32 v_st_nlink = 4;
  if (this->v_st_nlink() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_v_st_nlink(), target);
  }

  // uint32 v_st_uid = 5;
  if (this->v_st_uid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(5, this->_internal_v_st_uid(), target);
  }

  // uint32 v_st_gid = 6;
  if (this->v_st_gid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(6, this->_internal_v_st_gid(), target);
  }

  // uint32 v_st_rdev = 7;
  if (this->v_st_rdev() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(7, this->_internal_v_st_rdev(), target);
  }

  // uint64 v_st_size = 8;
  if (this->v_st_size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(8, this->_internal_v_st_size(), target);
  }

  // uint32 v_st_blksize = 9;
  if (this->v_st_blksize() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(9, this->_internal_v_st_blksize(), target);
  }

  // uint64 v_st_atime = 10;
  if (this->v_st_atime() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(10, this->_internal_v_st_atime(), target);
  }

  // uint64 v_st_mtime = 11;
  if (this->v_st_mtime() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(11, this->_internal_v_st_mtime(), target);
  }

  // uint64 v_st_ctime = 12;
  if (this->v_st_ctime() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(12, this->_internal_v_st_ctime(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bgasfsmsg.UpdateFileAttrRqstMsg)
  return target;
}

size_t UpdateFileAttrRqstMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bgasfsmsg.UpdateFileAttrRqstMsg)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string file = 1;
  if (this->file().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_file());
  }

  // uint32 v_st_dev = 2;
  if (this->v_st_dev() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_v_st_dev());
  }

  // uint32 v_st_mode = 3;
  if (this->v_st_mode() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_v_st_mode());
  }

  // uint32 v_st_nlink = 4;
  if (this->v_st_nlink() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_v_st_nlink());
  }

  // uint32 v_st_uid = 5;
  if (this->v_st_uid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_v_st_uid());
  }

  // uint32 v_st_gid = 6;
  if (this->v_st_gid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_v_st_gid());
  }

  // uint32 v_st_rdev = 7;
  if (this->v_st_rdev() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_v_st_rdev());
  }

  // uint64 v_st_size = 8;
  if (this->v_st_size() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_v_st_size());
  }

  // uint64 v_st_atime = 10;
  if (this->v_st_atime() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_v_st_atime());
  }

  // uint64 v_st_mtime = 11;
  if (this->v_st_mtime() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_v_st_mtime());
  }

  // uint64 v_st_ctime = 12;
  if (this->v_st_ctime() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_v_st_ctime());
  }

  // uint32 v_st_blksize = 9;
  if (this->v_st_blksize() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_v_st_blksize());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateFileAttrRqstMsg::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bgasfsmsg.UpdateFileAttrRqstMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateFileAttrRqstMsg* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpdateFileAttrRqstMsg>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bgasfsmsg.UpdateFileAttrRqstMsg)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bgasfsmsg.UpdateFileAttrRqstMsg)
    MergeFrom(*source);
  }
}

void UpdateFileAttrRqstMsg::MergeFrom(const UpdateFileAttrRqstMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bgasfsmsg.UpdateFileAttrRqstMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.file().size() > 0) {

    file_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.file_);
  }
  if (from.v_st_dev() != 0) {
    _internal_set_v_st_dev(from._internal_v_st_dev());
  }
  if (from.v_st_mode() != 0) {
    _internal_set_v_st_mode(from._internal_v_st_mode());
  }
  if (from.v_st_nlink() != 0) {
    _internal_set_v_st_nlink(from._internal_v_st_nlink());
  }
  if (from.v_st_uid() != 0) {
    _internal_set_v_st_uid(from._internal_v_st_uid());
  }
  if (from.v_st_gid() != 0) {
    _internal_set_v_st_gid(from._internal_v_st_gid());
  }
  if (from.v_st_rdev() != 0) {
    _internal_set_v_st_rdev(from._internal_v_st_rdev());
  }
  if (from.v_st_size() != 0) {
    _internal_set_v_st_size(from._internal_v_st_size());
  }
  if (from.v_st_atime() != 0) {
    _internal_set_v_st_atime(from._internal_v_st_atime());
  }
  if (from.v_st_mtime() != 0) {
    _internal_set_v_st_mtime(from._internal_v_st_mtime());
  }
  if (from.v_st_ctime() != 0) {
    _internal_set_v_st_ctime(from._internal_v_st_ctime());
  }
  if (from.v_st_blksize() != 0) {
    _internal_set_v_st_blksize(from._internal_v_st_blksize());
  }
}

void UpdateFileAttrRqstMsg::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bgasfsmsg.UpdateFileAttrRqstMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateFileAttrRqstMsg::CopyFrom(const UpdateFileAttrRqstMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bgasfsmsg.UpdateFileAttrRqstMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateFileAttrRqstMsg::IsInitialized() const {
  return true;
}

void UpdateFileAttrRqstMsg::InternalSwap(UpdateFileAttrRqstMsg* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  file_.Swap(&other->file_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(v_st_dev_, other->v_st_dev_);
  swap(v_st_mode_, other->v_st_mode_);
  swap(v_st_nlink_, other->v_st_nlink_);
  swap(v_st_uid_, other->v_st_uid_);
  swap(v_st_gid_, other->v_st_gid_);
  swap(v_st_rdev_, other->v_st_rdev_);
  swap(v_st_size_, other->v_st_size_);
  swap(v_st_atime_, other->v_st_atime_);
  swap(v_st_mtime_, other->v_st_mtime_);
  swap(v_st_ctime_, other->v_st_ctime_);
  swap(v_st_blksize_, other->v_st_blksize_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateFileAttrRqstMsg::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UpdateFileAttrRspMsg::InitAsDefaultInstance() {
}
class UpdateFileAttrRspMsg::_Internal {
 public:
};

UpdateFileAttrRspMsg::UpdateFileAttrRspMsg()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgasfsmsg.UpdateFileAttrRspMsg)
}
UpdateFileAttrRspMsg::UpdateFileAttrRspMsg(const UpdateFileAttrRspMsg& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:bgasfsmsg.UpdateFileAttrRspMsg)
}

void UpdateFileAttrRspMsg::SharedCtor() {
  success_ = false;
}

UpdateFileAttrRspMsg::~UpdateFileAttrRspMsg() {
  // @@protoc_insertion_point(destructor:bgasfsmsg.UpdateFileAttrRspMsg)
  SharedDtor();
}

void UpdateFileAttrRspMsg::SharedDtor() {
}

void UpdateFileAttrRspMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpdateFileAttrRspMsg& UpdateFileAttrRspMsg::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UpdateFileAttrRspMsg_bgasfs_2eproto.base);
  return *internal_default_instance();
}


void UpdateFileAttrRspMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:bgasfsmsg.UpdateFileAttrRspMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  success_ = false;
  _internal_metadata_.Clear();
}

const char* UpdateFileAttrRspMsg::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool success = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          success_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateFileAttrRspMsg::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bgasfsmsg.UpdateFileAttrRspMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool success = 1;
  if (this->success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_success(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bgasfsmsg.UpdateFileAttrRspMsg)
  return target;
}

size_t UpdateFileAttrRspMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bgasfsmsg.UpdateFileAttrRspMsg)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool success = 1;
  if (this->success() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateFileAttrRspMsg::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bgasfsmsg.UpdateFileAttrRspMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateFileAttrRspMsg* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpdateFileAttrRspMsg>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bgasfsmsg.UpdateFileAttrRspMsg)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bgasfsmsg.UpdateFileAttrRspMsg)
    MergeFrom(*source);
  }
}

void UpdateFileAttrRspMsg::MergeFrom(const UpdateFileAttrRspMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bgasfsmsg.UpdateFileAttrRspMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.success() != 0) {
    _internal_set_success(from._internal_success());
  }
}

void UpdateFileAttrRspMsg::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bgasfsmsg.UpdateFileAttrRspMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateFileAttrRspMsg::CopyFrom(const UpdateFileAttrRspMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bgasfsmsg.UpdateFileAttrRspMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateFileAttrRspMsg::IsInitialized() const {
  return true;
}

void UpdateFileAttrRspMsg::InternalSwap(UpdateFileAttrRspMsg* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(success_, other->success_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateFileAttrRspMsg::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void FileIORqstMsg::InitAsDefaultInstance() {
}
class FileIORqstMsg::_Internal {
 public:
};

FileIORqstMsg::FileIORqstMsg()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgasfsmsg.FileIORqstMsg)
}
FileIORqstMsg::FileIORqstMsg(const FileIORqstMsg& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  file_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_file().empty()) {
    file_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.file_);
  }
  write_ = from.write_;
  // @@protoc_insertion_point(copy_constructor:bgasfsmsg.FileIORqstMsg)
}

void FileIORqstMsg::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_FileIORqstMsg_bgasfs_2eproto.base);
  file_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  write_ = false;
}

FileIORqstMsg::~FileIORqstMsg() {
  // @@protoc_insertion_point(destructor:bgasfsmsg.FileIORqstMsg)
  SharedDtor();
}

void FileIORqstMsg::SharedDtor() {
  file_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void FileIORqstMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const FileIORqstMsg& FileIORqstMsg::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_FileIORqstMsg_bgasfs_2eproto.base);
  return *internal_default_instance();
}


void FileIORqstMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:bgasfsmsg.FileIORqstMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  file_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  write_ = false;
  _internal_metadata_.Clear();
}

const char* FileIORqstMsg::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string file = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_file();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "bgasfsmsg.FileIORqstMsg.file"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool write = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          write_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FileIORqstMsg::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bgasfsmsg.FileIORqstMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string file = 1;
  if (this->file().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_file().data(), static_cast<int>(this->_internal_file().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "bgasfsmsg.FileIORqstMsg.file");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_file(), target);
  }

  // bool write = 2;
  if (this->write() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_write(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bgasfsmsg.FileIORqstMsg)
  return target;
}

size_t FileIORqstMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bgasfsmsg.FileIORqstMsg)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string file = 1;
  if (this->file().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_file());
  }

  // bool write = 2;
  if (this->write() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FileIORqstMsg::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bgasfsmsg.FileIORqstMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const FileIORqstMsg* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FileIORqstMsg>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bgasfsmsg.FileIORqstMsg)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bgasfsmsg.FileIORqstMsg)
    MergeFrom(*source);
  }
}

void FileIORqstMsg::MergeFrom(const FileIORqstMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bgasfsmsg.FileIORqstMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.file().size() > 0) {

    file_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.file_);
  }
  if (from.write() != 0) {
    _internal_set_write(from._internal_write());
  }
}

void FileIORqstMsg::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bgasfsmsg.FileIORqstMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileIORqstMsg::CopyFrom(const FileIORqstMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bgasfsmsg.FileIORqstMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileIORqstMsg::IsInitialized() const {
  return true;
}

void FileIORqstMsg::InternalSwap(FileIORqstMsg* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  file_.Swap(&other->file_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(write_, other->write_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FileIORqstMsg::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void FileIORspMsg::InitAsDefaultInstance() {
}
class FileIORspMsg::_Internal {
 public:
};

FileIORspMsg::FileIORspMsg()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgasfsmsg.FileIORspMsg)
}
FileIORspMsg::FileIORspMsg(const FileIORspMsg& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  server_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_server().empty()) {
    server_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.server_);
  }
  ::memcpy(&len_, &from.len_,
    static_cast<size_t>(reinterpret_cast<char*>(&success_) -
    reinterpret_cast<char*>(&len_)) + sizeof(success_));
  // @@protoc_insertion_point(copy_constructor:bgasfsmsg.FileIORspMsg)
}

void FileIORspMsg::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_FileIORspMsg_bgasfs_2eproto.base);
  server_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&len_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&success_) -
      reinterpret_cast<char*>(&len_)) + sizeof(success_));
}

FileIORspMsg::~FileIORspMsg() {
  // @@protoc_insertion_point(destructor:bgasfsmsg.FileIORspMsg)
  SharedDtor();
}

void FileIORspMsg::SharedDtor() {
  server_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void FileIORspMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const FileIORspMsg& FileIORspMsg::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_FileIORspMsg_bgasfs_2eproto.base);
  return *internal_default_instance();
}


void FileIORspMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:bgasfsmsg.FileIORspMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  server_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&len_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&success_) -
      reinterpret_cast<char*>(&len_)) + sizeof(success_));
  _internal_metadata_.Clear();
}

const char* FileIORspMsg::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string server = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_server();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "bgasfsmsg.FileIORspMsg.server"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 len = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          len_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool success = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          success_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FileIORspMsg::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bgasfsmsg.FileIORspMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string server = 1;
  if (this->server().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_server().data(), static_cast<int>(this->_internal_server().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "bgasfsmsg.FileIORspMsg.server");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_server(), target);
  }

  // uint64 len = 2;
  if (this->len() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_len(), target);
  }

  // bool success = 3;
  if (this->success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->_internal_success(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bgasfsmsg.FileIORspMsg)
  return target;
}

size_t FileIORspMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bgasfsmsg.FileIORspMsg)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string server = 1;
  if (this->server().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_server());
  }

  // uint64 len = 2;
  if (this->len() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_len());
  }

  // bool success = 3;
  if (this->success() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FileIORspMsg::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bgasfsmsg.FileIORspMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const FileIORspMsg* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FileIORspMsg>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bgasfsmsg.FileIORspMsg)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bgasfsmsg.FileIORspMsg)
    MergeFrom(*source);
  }
}

void FileIORspMsg::MergeFrom(const FileIORspMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bgasfsmsg.FileIORspMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.server().size() > 0) {

    server_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.server_);
  }
  if (from.len() != 0) {
    _internal_set_len(from._internal_len());
  }
  if (from.success() != 0) {
    _internal_set_success(from._internal_success());
  }
}

void FileIORspMsg::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bgasfsmsg.FileIORspMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileIORspMsg::CopyFrom(const FileIORspMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bgasfsmsg.FileIORspMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileIORspMsg::IsInitialized() const {
  return true;
}

void FileIORspMsg::InternalSwap(FileIORspMsg* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  server_.Swap(&other->server_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(len_, other->len_);
  swap(success_, other->success_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FileIORspMsg::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ClientIOReadRqstMsg::InitAsDefaultInstance() {
}
class ClientIOReadRqstMsg::_Internal {
 public:
};

ClientIOReadRqstMsg::ClientIOReadRqstMsg()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgasfsmsg.ClientIOReadRqstMsg)
}
ClientIOReadRqstMsg::ClientIOReadRqstMsg(const ClientIOReadRqstMsg& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  file_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_file().empty()) {
    file_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.file_);
  }
  ::memcpy(&offset_, &from.offset_,
    static_cast<size_t>(reinterpret_cast<char*>(&len_) -
    reinterpret_cast<char*>(&offset_)) + sizeof(len_));
  // @@protoc_insertion_point(copy_constructor:bgasfsmsg.ClientIOReadRqstMsg)
}

void ClientIOReadRqstMsg::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ClientIOReadRqstMsg_bgasfs_2eproto.base);
  file_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&offset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&len_) -
      reinterpret_cast<char*>(&offset_)) + sizeof(len_));
}

ClientIOReadRqstMsg::~ClientIOReadRqstMsg() {
  // @@protoc_insertion_point(destructor:bgasfsmsg.ClientIOReadRqstMsg)
  SharedDtor();
}

void ClientIOReadRqstMsg::SharedDtor() {
  file_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ClientIOReadRqstMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ClientIOReadRqstMsg& ClientIOReadRqstMsg::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ClientIOReadRqstMsg_bgasfs_2eproto.base);
  return *internal_default_instance();
}


void ClientIOReadRqstMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:bgasfsmsg.ClientIOReadRqstMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  file_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&offset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&len_) -
      reinterpret_cast<char*>(&offset_)) + sizeof(len_));
  _internal_metadata_.Clear();
}

const char* ClientIOReadRqstMsg::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string file = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_file();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "bgasfsmsg.ClientIOReadRqstMsg.file"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 offset = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          offset_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 len = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          len_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ClientIOReadRqstMsg::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bgasfsmsg.ClientIOReadRqstMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string file = 1;
  if (this->file().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_file().data(), static_cast<int>(this->_internal_file().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "bgasfsmsg.ClientIOReadRqstMsg.file");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_file(), target);
  }

  // uint64 offset = 2;
  if (this->offset() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_offset(), target);
  }

  // uint64 len = 3;
  if (this->len() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(3, this->_internal_len(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bgasfsmsg.ClientIOReadRqstMsg)
  return target;
}

size_t ClientIOReadRqstMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bgasfsmsg.ClientIOReadRqstMsg)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string file = 1;
  if (this->file().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_file());
  }

  // uint64 offset = 2;
  if (this->offset() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_offset());
  }

  // uint64 len = 3;
  if (this->len() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_len());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ClientIOReadRqstMsg::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bgasfsmsg.ClientIOReadRqstMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const ClientIOReadRqstMsg* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ClientIOReadRqstMsg>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bgasfsmsg.ClientIOReadRqstMsg)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bgasfsmsg.ClientIOReadRqstMsg)
    MergeFrom(*source);
  }
}

void ClientIOReadRqstMsg::MergeFrom(const ClientIOReadRqstMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bgasfsmsg.ClientIOReadRqstMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.file().size() > 0) {

    file_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.file_);
  }
  if (from.offset() != 0) {
    _internal_set_offset(from._internal_offset());
  }
  if (from.len() != 0) {
    _internal_set_len(from._internal_len());
  }
}

void ClientIOReadRqstMsg::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bgasfsmsg.ClientIOReadRqstMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientIOReadRqstMsg::CopyFrom(const ClientIOReadRqstMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bgasfsmsg.ClientIOReadRqstMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientIOReadRqstMsg::IsInitialized() const {
  return true;
}

void ClientIOReadRqstMsg::InternalSwap(ClientIOReadRqstMsg* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  file_.Swap(&other->file_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(offset_, other->offset_);
  swap(len_, other->len_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ClientIOReadRqstMsg::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ClientIOReadRspMsg::InitAsDefaultInstance() {
}
class ClientIOReadRspMsg::_Internal {
 public:
};

ClientIOReadRspMsg::ClientIOReadRspMsg()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgasfsmsg.ClientIOReadRspMsg)
}
ClientIOReadRspMsg::ClientIOReadRspMsg(const ClientIOReadRspMsg& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  file_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_file().empty()) {
    file_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.file_);
  }
  // @@protoc_insertion_point(copy_constructor:bgasfsmsg.ClientIOReadRspMsg)
}

void ClientIOReadRspMsg::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ClientIOReadRspMsg_bgasfs_2eproto.base);
  file_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ClientIOReadRspMsg::~ClientIOReadRspMsg() {
  // @@protoc_insertion_point(destructor:bgasfsmsg.ClientIOReadRspMsg)
  SharedDtor();
}

void ClientIOReadRspMsg::SharedDtor() {
  file_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ClientIOReadRspMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ClientIOReadRspMsg& ClientIOReadRspMsg::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ClientIOReadRspMsg_bgasfs_2eproto.base);
  return *internal_default_instance();
}


void ClientIOReadRspMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:bgasfsmsg.ClientIOReadRspMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  file_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

const char* ClientIOReadRspMsg::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string file = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_file();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "bgasfsmsg.ClientIOReadRspMsg.file"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ClientIOReadRspMsg::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bgasfsmsg.ClientIOReadRspMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string file = 1;
  if (this->file().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_file().data(), static_cast<int>(this->_internal_file().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "bgasfsmsg.ClientIOReadRspMsg.file");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_file(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bgasfsmsg.ClientIOReadRspMsg)
  return target;
}

size_t ClientIOReadRspMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bgasfsmsg.ClientIOReadRspMsg)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string file = 1;
  if (this->file().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_file());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ClientIOReadRspMsg::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bgasfsmsg.ClientIOReadRspMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const ClientIOReadRspMsg* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ClientIOReadRspMsg>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bgasfsmsg.ClientIOReadRspMsg)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bgasfsmsg.ClientIOReadRspMsg)
    MergeFrom(*source);
  }
}

void ClientIOReadRspMsg::MergeFrom(const ClientIOReadRspMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bgasfsmsg.ClientIOReadRspMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.file().size() > 0) {

    file_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.file_);
  }
}

void ClientIOReadRspMsg::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bgasfsmsg.ClientIOReadRspMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientIOReadRspMsg::CopyFrom(const ClientIOReadRspMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bgasfsmsg.ClientIOReadRspMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientIOReadRspMsg::IsInitialized() const {
  return true;
}

void ClientIOReadRspMsg::InternalSwap(ClientIOReadRspMsg* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  file_.Swap(&other->file_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata ClientIOReadRspMsg::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ClientIOWriteRqstMsg::InitAsDefaultInstance() {
}
class ClientIOWriteRqstMsg::_Internal {
 public:
};

ClientIOWriteRqstMsg::ClientIOWriteRqstMsg()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgasfsmsg.ClientIOWriteRqstMsg)
}
ClientIOWriteRqstMsg::ClientIOWriteRqstMsg(const ClientIOWriteRqstMsg& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  file_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_file().empty()) {
    file_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.file_);
  }
  ::memcpy(&offset_, &from.offset_,
    static_cast<size_t>(reinterpret_cast<char*>(&len_) -
    reinterpret_cast<char*>(&offset_)) + sizeof(len_));
  // @@protoc_insertion_point(copy_constructor:bgasfsmsg.ClientIOWriteRqstMsg)
}

void ClientIOWriteRqstMsg::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ClientIOWriteRqstMsg_bgasfs_2eproto.base);
  file_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&offset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&len_) -
      reinterpret_cast<char*>(&offset_)) + sizeof(len_));
}

ClientIOWriteRqstMsg::~ClientIOWriteRqstMsg() {
  // @@protoc_insertion_point(destructor:bgasfsmsg.ClientIOWriteRqstMsg)
  SharedDtor();
}

void ClientIOWriteRqstMsg::SharedDtor() {
  file_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ClientIOWriteRqstMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ClientIOWriteRqstMsg& ClientIOWriteRqstMsg::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ClientIOWriteRqstMsg_bgasfs_2eproto.base);
  return *internal_default_instance();
}


void ClientIOWriteRqstMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:bgasfsmsg.ClientIOWriteRqstMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  file_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&offset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&len_) -
      reinterpret_cast<char*>(&offset_)) + sizeof(len_));
  _internal_metadata_.Clear();
}

const char* ClientIOWriteRqstMsg::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string file = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_file();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "bgasfsmsg.ClientIOWriteRqstMsg.file"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 offset = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          offset_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 len = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          len_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ClientIOWriteRqstMsg::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bgasfsmsg.ClientIOWriteRqstMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string file = 1;
  if (this->file().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_file().data(), static_cast<int>(this->_internal_file().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "bgasfsmsg.ClientIOWriteRqstMsg.file");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_file(), target);
  }

  // uint64 offset = 2;
  if (this->offset() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_offset(), target);
  }

  // uint64 len = 3;
  if (this->len() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(3, this->_internal_len(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bgasfsmsg.ClientIOWriteRqstMsg)
  return target;
}

size_t ClientIOWriteRqstMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bgasfsmsg.ClientIOWriteRqstMsg)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string file = 1;
  if (this->file().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_file());
  }

  // uint64 offset = 2;
  if (this->offset() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_offset());
  }

  // uint64 len = 3;
  if (this->len() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_len());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ClientIOWriteRqstMsg::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bgasfsmsg.ClientIOWriteRqstMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const ClientIOWriteRqstMsg* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ClientIOWriteRqstMsg>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bgasfsmsg.ClientIOWriteRqstMsg)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bgasfsmsg.ClientIOWriteRqstMsg)
    MergeFrom(*source);
  }
}

void ClientIOWriteRqstMsg::MergeFrom(const ClientIOWriteRqstMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bgasfsmsg.ClientIOWriteRqstMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.file().size() > 0) {

    file_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.file_);
  }
  if (from.offset() != 0) {
    _internal_set_offset(from._internal_offset());
  }
  if (from.len() != 0) {
    _internal_set_len(from._internal_len());
  }
}

void ClientIOWriteRqstMsg::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bgasfsmsg.ClientIOWriteRqstMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientIOWriteRqstMsg::CopyFrom(const ClientIOWriteRqstMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bgasfsmsg.ClientIOWriteRqstMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientIOWriteRqstMsg::IsInitialized() const {
  return true;
}

void ClientIOWriteRqstMsg::InternalSwap(ClientIOWriteRqstMsg* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  file_.Swap(&other->file_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(offset_, other->offset_);
  swap(len_, other->len_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ClientIOWriteRqstMsg::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ClientIOWriteRspMsg::InitAsDefaultInstance() {
}
class ClientIOWriteRspMsg::_Internal {
 public:
};

ClientIOWriteRspMsg::ClientIOWriteRspMsg()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgasfsmsg.ClientIOWriteRspMsg)
}
ClientIOWriteRspMsg::ClientIOWriteRspMsg(const ClientIOWriteRspMsg& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  file_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_file().empty()) {
    file_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.file_);
  }
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:bgasfsmsg.ClientIOWriteRspMsg)
}

void ClientIOWriteRspMsg::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ClientIOWriteRspMsg_bgasfs_2eproto.base);
  file_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  success_ = false;
}

ClientIOWriteRspMsg::~ClientIOWriteRspMsg() {
  // @@protoc_insertion_point(destructor:bgasfsmsg.ClientIOWriteRspMsg)
  SharedDtor();
}

void ClientIOWriteRspMsg::SharedDtor() {
  file_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ClientIOWriteRspMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ClientIOWriteRspMsg& ClientIOWriteRspMsg::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ClientIOWriteRspMsg_bgasfs_2eproto.base);
  return *internal_default_instance();
}


void ClientIOWriteRspMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:bgasfsmsg.ClientIOWriteRspMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  file_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  success_ = false;
  _internal_metadata_.Clear();
}

const char* ClientIOWriteRspMsg::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string file = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_file();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "bgasfsmsg.ClientIOWriteRspMsg.file"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool success = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          success_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ClientIOWriteRspMsg::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bgasfsmsg.ClientIOWriteRspMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string file = 1;
  if (this->file().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_file().data(), static_cast<int>(this->_internal_file().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "bgasfsmsg.ClientIOWriteRspMsg.file");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_file(), target);
  }

  // bool success = 2;
  if (this->success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_success(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bgasfsmsg.ClientIOWriteRspMsg)
  return target;
}

size_t ClientIOWriteRspMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bgasfsmsg.ClientIOWriteRspMsg)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string file = 1;
  if (this->file().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_file());
  }

  // bool success = 2;
  if (this->success() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ClientIOWriteRspMsg::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bgasfsmsg.ClientIOWriteRspMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const ClientIOWriteRspMsg* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ClientIOWriteRspMsg>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bgasfsmsg.ClientIOWriteRspMsg)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bgasfsmsg.ClientIOWriteRspMsg)
    MergeFrom(*source);
  }
}

void ClientIOWriteRspMsg::MergeFrom(const ClientIOWriteRspMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bgasfsmsg.ClientIOWriteRspMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.file().size() > 0) {

    file_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.file_);
  }
  if (from.success() != 0) {
    _internal_set_success(from._internal_success());
  }
}

void ClientIOWriteRspMsg::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bgasfsmsg.ClientIOWriteRspMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientIOWriteRspMsg::CopyFrom(const ClientIOWriteRspMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bgasfsmsg.ClientIOWriteRspMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientIOWriteRspMsg::IsInitialized() const {
  return true;
}

void ClientIOWriteRspMsg::InternalSwap(ClientIOWriteRspMsg* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  file_.Swap(&other->file_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(success_, other->success_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ClientIOWriteRspMsg::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DataPrefetchRqstMsg::InitAsDefaultInstance() {
}
class DataPrefetchRqstMsg::_Internal {
 public:
};

DataPrefetchRqstMsg::DataPrefetchRqstMsg()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgasfsmsg.DataPrefetchRqstMsg)
}
DataPrefetchRqstMsg::DataPrefetchRqstMsg(const DataPrefetchRqstMsg& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  file_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_file().empty()) {
    file_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.file_);
  }
  ::memcpy(&offset_, &from.offset_,
    static_cast<size_t>(reinterpret_cast<char*>(&len_) -
    reinterpret_cast<char*>(&offset_)) + sizeof(len_));
  // @@protoc_insertion_point(copy_constructor:bgasfsmsg.DataPrefetchRqstMsg)
}

void DataPrefetchRqstMsg::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DataPrefetchRqstMsg_bgasfs_2eproto.base);
  file_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&offset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&len_) -
      reinterpret_cast<char*>(&offset_)) + sizeof(len_));
}

DataPrefetchRqstMsg::~DataPrefetchRqstMsg() {
  // @@protoc_insertion_point(destructor:bgasfsmsg.DataPrefetchRqstMsg)
  SharedDtor();
}

void DataPrefetchRqstMsg::SharedDtor() {
  file_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DataPrefetchRqstMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DataPrefetchRqstMsg& DataPrefetchRqstMsg::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DataPrefetchRqstMsg_bgasfs_2eproto.base);
  return *internal_default_instance();
}


void DataPrefetchRqstMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:bgasfsmsg.DataPrefetchRqstMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  file_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&offset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&len_) -
      reinterpret_cast<char*>(&offset_)) + sizeof(len_));
  _internal_metadata_.Clear();
}

const char* DataPrefetchRqstMsg::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string file = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_file();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "bgasfsmsg.DataPrefetchRqstMsg.file"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 offset = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          offset_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 len = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          len_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DataPrefetchRqstMsg::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bgasfsmsg.DataPrefetchRqstMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string file = 1;
  if (this->file().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_file().data(), static_cast<int>(this->_internal_file().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "bgasfsmsg.DataPrefetchRqstMsg.file");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_file(), target);
  }

  // uint64 offset = 2;
  if (this->offset() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_offset(), target);
  }

  // uint64 len = 3;
  if (this->len() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(3, this->_internal_len(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bgasfsmsg.DataPrefetchRqstMsg)
  return target;
}

size_t DataPrefetchRqstMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bgasfsmsg.DataPrefetchRqstMsg)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string file = 1;
  if (this->file().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_file());
  }

  // uint64 offset = 2;
  if (this->offset() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_offset());
  }

  // uint64 len = 3;
  if (this->len() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_len());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DataPrefetchRqstMsg::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bgasfsmsg.DataPrefetchRqstMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const DataPrefetchRqstMsg* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DataPrefetchRqstMsg>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bgasfsmsg.DataPrefetchRqstMsg)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bgasfsmsg.DataPrefetchRqstMsg)
    MergeFrom(*source);
  }
}

void DataPrefetchRqstMsg::MergeFrom(const DataPrefetchRqstMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bgasfsmsg.DataPrefetchRqstMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.file().size() > 0) {

    file_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.file_);
  }
  if (from.offset() != 0) {
    _internal_set_offset(from._internal_offset());
  }
  if (from.len() != 0) {
    _internal_set_len(from._internal_len());
  }
}

void DataPrefetchRqstMsg::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bgasfsmsg.DataPrefetchRqstMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DataPrefetchRqstMsg::CopyFrom(const DataPrefetchRqstMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bgasfsmsg.DataPrefetchRqstMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataPrefetchRqstMsg::IsInitialized() const {
  return true;
}

void DataPrefetchRqstMsg::InternalSwap(DataPrefetchRqstMsg* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  file_.Swap(&other->file_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(offset_, other->offset_);
  swap(len_, other->len_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DataPrefetchRqstMsg::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DataPrefetchRspMsg::InitAsDefaultInstance() {
}
class DataPrefetchRspMsg::_Internal {
 public:
};

DataPrefetchRspMsg::DataPrefetchRspMsg()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgasfsmsg.DataPrefetchRspMsg)
}
DataPrefetchRspMsg::DataPrefetchRspMsg(const DataPrefetchRspMsg& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  file_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_file().empty()) {
    file_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.file_);
  }
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:bgasfsmsg.DataPrefetchRspMsg)
}

void DataPrefetchRspMsg::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DataPrefetchRspMsg_bgasfs_2eproto.base);
  file_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  success_ = false;
}

DataPrefetchRspMsg::~DataPrefetchRspMsg() {
  // @@protoc_insertion_point(destructor:bgasfsmsg.DataPrefetchRspMsg)
  SharedDtor();
}

void DataPrefetchRspMsg::SharedDtor() {
  file_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DataPrefetchRspMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DataPrefetchRspMsg& DataPrefetchRspMsg::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DataPrefetchRspMsg_bgasfs_2eproto.base);
  return *internal_default_instance();
}


void DataPrefetchRspMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:bgasfsmsg.DataPrefetchRspMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  file_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  success_ = false;
  _internal_metadata_.Clear();
}

const char* DataPrefetchRspMsg::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string file = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_file();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "bgasfsmsg.DataPrefetchRspMsg.file"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool success = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          success_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DataPrefetchRspMsg::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bgasfsmsg.DataPrefetchRspMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string file = 1;
  if (this->file().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_file().data(), static_cast<int>(this->_internal_file().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "bgasfsmsg.DataPrefetchRspMsg.file");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_file(), target);
  }

  // bool success = 2;
  if (this->success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_success(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bgasfsmsg.DataPrefetchRspMsg)
  return target;
}

size_t DataPrefetchRspMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bgasfsmsg.DataPrefetchRspMsg)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string file = 1;
  if (this->file().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_file());
  }

  // bool success = 2;
  if (this->success() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DataPrefetchRspMsg::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bgasfsmsg.DataPrefetchRspMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const DataPrefetchRspMsg* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DataPrefetchRspMsg>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bgasfsmsg.DataPrefetchRspMsg)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bgasfsmsg.DataPrefetchRspMsg)
    MergeFrom(*source);
  }
}

void DataPrefetchRspMsg::MergeFrom(const DataPrefetchRspMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bgasfsmsg.DataPrefetchRspMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.file().size() > 0) {

    file_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.file_);
  }
  if (from.success() != 0) {
    _internal_set_success(from._internal_success());
  }
}

void DataPrefetchRspMsg::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bgasfsmsg.DataPrefetchRspMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DataPrefetchRspMsg::CopyFrom(const DataPrefetchRspMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bgasfsmsg.DataPrefetchRspMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataPrefetchRspMsg::IsInitialized() const {
  return true;
}

void DataPrefetchRspMsg::InternalSwap(DataPrefetchRspMsg* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  file_.Swap(&other->file_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(success_, other->success_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DataPrefetchRspMsg::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace bgasfsmsg
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::bgasfsmsg::FileAttrRqstMsg* Arena::CreateMaybeMessage< ::bgasfsmsg::FileAttrRqstMsg >(Arena* arena) {
  return Arena::CreateInternal< ::bgasfsmsg::FileAttrRqstMsg >(arena);
}
template<> PROTOBUF_NOINLINE ::bgasfsmsg::FileAttrRspMsg* Arena::CreateMaybeMessage< ::bgasfsmsg::FileAttrRspMsg >(Arena* arena) {
  return Arena::CreateInternal< ::bgasfsmsg::FileAttrRspMsg >(arena);
}
template<> PROTOBUF_NOINLINE ::bgasfsmsg::UpdateFileAttrRqstMsg* Arena::CreateMaybeMessage< ::bgasfsmsg::UpdateFileAttrRqstMsg >(Arena* arena) {
  return Arena::CreateInternal< ::bgasfsmsg::UpdateFileAttrRqstMsg >(arena);
}
template<> PROTOBUF_NOINLINE ::bgasfsmsg::UpdateFileAttrRspMsg* Arena::CreateMaybeMessage< ::bgasfsmsg::UpdateFileAttrRspMsg >(Arena* arena) {
  return Arena::CreateInternal< ::bgasfsmsg::UpdateFileAttrRspMsg >(arena);
}
template<> PROTOBUF_NOINLINE ::bgasfsmsg::FileIORqstMsg* Arena::CreateMaybeMessage< ::bgasfsmsg::FileIORqstMsg >(Arena* arena) {
  return Arena::CreateInternal< ::bgasfsmsg::FileIORqstMsg >(arena);
}
template<> PROTOBUF_NOINLINE ::bgasfsmsg::FileIORspMsg* Arena::CreateMaybeMessage< ::bgasfsmsg::FileIORspMsg >(Arena* arena) {
  return Arena::CreateInternal< ::bgasfsmsg::FileIORspMsg >(arena);
}
template<> PROTOBUF_NOINLINE ::bgasfsmsg::ClientIOReadRqstMsg* Arena::CreateMaybeMessage< ::bgasfsmsg::ClientIOReadRqstMsg >(Arena* arena) {
  return Arena::CreateInternal< ::bgasfsmsg::ClientIOReadRqstMsg >(arena);
}
template<> PROTOBUF_NOINLINE ::bgasfsmsg::ClientIOReadRspMsg* Arena::CreateMaybeMessage< ::bgasfsmsg::ClientIOReadRspMsg >(Arena* arena) {
  return Arena::CreateInternal< ::bgasfsmsg::ClientIOReadRspMsg >(arena);
}
template<> PROTOBUF_NOINLINE ::bgasfsmsg::ClientIOWriteRqstMsg* Arena::CreateMaybeMessage< ::bgasfsmsg::ClientIOWriteRqstMsg >(Arena* arena) {
  return Arena::CreateInternal< ::bgasfsmsg::ClientIOWriteRqstMsg >(arena);
}
template<> PROTOBUF_NOINLINE ::bgasfsmsg::ClientIOWriteRspMsg* Arena::CreateMaybeMessage< ::bgasfsmsg::ClientIOWriteRspMsg >(Arena* arena) {
  return Arena::CreateInternal< ::bgasfsmsg::ClientIOWriteRspMsg >(arena);
}
template<> PROTOBUF_NOINLINE ::bgasfsmsg::DataPrefetchRqstMsg* Arena::CreateMaybeMessage< ::bgasfsmsg::DataPrefetchRqstMsg >(Arena* arena) {
  return Arena::CreateInternal< ::bgasfsmsg::DataPrefetchRqstMsg >(arena);
}
template<> PROTOBUF_NOINLINE ::bgasfsmsg::DataPrefetchRspMsg* Arena::CreateMaybeMessage< ::bgasfsmsg::DataPrefetchRspMsg >(Arena* arena) {
  return Arena::CreateInternal< ::bgasfsmsg::DataPrefetchRspMsg >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
