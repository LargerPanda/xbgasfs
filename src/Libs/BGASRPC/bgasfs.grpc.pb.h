// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: bgasfs.proto
// Original file comments:
//
// bgasfs.proto
//
// Copyright (C) 2017-2020 Tactical Computing Laboratories, LLC
// All Rights Reserved
// contact@tactcomplabs.com
//
// See LICENSE in the top level directory for licensing details
//
//
#ifndef GRPC_bgasfs_2eproto__INCLUDED
#define GRPC_bgasfs_2eproto__INCLUDED

#include "bgasfs.pb.h"

#include <grpc++/impl/codegen/async_stream.h>
#include <grpc++/impl/codegen/async_unary_call.h>
#include <grpc++/impl/codegen/method_handler_impl.h>
#include <grpc++/impl/codegen/proto_utils.h>
#include <grpc++/impl/codegen/rpc_method.h>
#include <grpc++/impl/codegen/service_type.h>
#include <grpc++/impl/codegen/status.h>
#include <grpc++/impl/codegen/stub_options.h>
#include <grpc++/impl/codegen/sync_stream.h>

namespace grpc {
class CompletionQueue;
class Channel;
class ServerCompletionQueue;
class ServerContext;
}  // namespace grpc

namespace bgasfsmsg {

// ------------ RPC Handlers
class BGASFSMsg final {
 public:
  static constexpr char const* service_full_name() {
    return "bgasfsmsg.BGASFSMsg";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    // Client ==> MDS: Request a file attribute
    virtual ::grpc::Status ClientRqstFileAttr(::grpc::ClientContext* context, const ::bgasfsmsg::FileAttrRqstMsg& request, ::bgasfsmsg::FileAttrRspMsg* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bgasfsmsg::FileAttrRspMsg>> AsyncClientRqstFileAttr(::grpc::ClientContext* context, const ::bgasfsmsg::FileAttrRqstMsg& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bgasfsmsg::FileAttrRspMsg>>(AsyncClientRqstFileAttrRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bgasfsmsg::FileAttrRspMsg>> PrepareAsyncClientRqstFileAttr(::grpc::ClientContext* context, const ::bgasfsmsg::FileAttrRqstMsg& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bgasfsmsg::FileAttrRspMsg>>(PrepareAsyncClientRqstFileAttrRaw(context, request, cq));
    }
    // Client ==> MDS: Update a file attribute
    virtual ::grpc::Status ClientRqstUpdateFileAttr(::grpc::ClientContext* context, const ::bgasfsmsg::UpdateFileAttrRqstMsg& request, ::bgasfsmsg::UpdateFileAttrRspMsg* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bgasfsmsg::UpdateFileAttrRspMsg>> AsyncClientRqstUpdateFileAttr(::grpc::ClientContext* context, const ::bgasfsmsg::UpdateFileAttrRqstMsg& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bgasfsmsg::UpdateFileAttrRspMsg>>(AsyncClientRqstUpdateFileAttrRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bgasfsmsg::UpdateFileAttrRspMsg>> PrepareAsyncClientRqstUpdateFileAttr(::grpc::ClientContext* context, const ::bgasfsmsg::UpdateFileAttrRqstMsg& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bgasfsmsg::UpdateFileAttrRspMsg>>(PrepareAsyncClientRqstUpdateFileAttrRaw(context, request, cq));
    }
    // Client ==> MDS: Initiate an I/O request
    virtual ::grpc::Status ClientRqstIO(::grpc::ClientContext* context, const ::bgasfsmsg::FileIORqstMsg& request, ::bgasfsmsg::FileIORspMsg* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bgasfsmsg::FileIORspMsg>> AsyncClientRqstIO(::grpc::ClientContext* context, const ::bgasfsmsg::FileIORqstMsg& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bgasfsmsg::FileIORspMsg>>(AsyncClientRqstIORaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bgasfsmsg::FileIORspMsg>> PrepareAsyncClientRqstIO(::grpc::ClientContext* context, const ::bgasfsmsg::FileIORqstMsg& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bgasfsmsg::FileIORspMsg>>(PrepareAsyncClientRqstIORaw(context, request, cq));
    }
    // Client ==> DataServer: Initiate a read request
    virtual ::grpc::Status ClientReadRqst(::grpc::ClientContext* context, const ::bgasfsmsg::ClientIOReadRqstMsg& request, ::bgasfsmsg::ClientIOReadRspMsg* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bgasfsmsg::ClientIOReadRspMsg>> AsyncClientReadRqst(::grpc::ClientContext* context, const ::bgasfsmsg::ClientIOReadRqstMsg& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bgasfsmsg::ClientIOReadRspMsg>>(AsyncClientReadRqstRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bgasfsmsg::ClientIOReadRspMsg>> PrepareAsyncClientReadRqst(::grpc::ClientContext* context, const ::bgasfsmsg::ClientIOReadRqstMsg& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bgasfsmsg::ClientIOReadRspMsg>>(PrepareAsyncClientReadRqstRaw(context, request, cq));
    }
    // Client ==> DataServer: Initiate a write request
    virtual ::grpc::Status ClientWriteRqst(::grpc::ClientContext* context, const ::bgasfsmsg::ClientIOWriteRqstMsg& request, ::bgasfsmsg::ClientIOWriteRspMsg* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bgasfsmsg::ClientIOWriteRspMsg>> AsyncClientWriteRqst(::grpc::ClientContext* context, const ::bgasfsmsg::ClientIOWriteRqstMsg& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bgasfsmsg::ClientIOWriteRspMsg>>(AsyncClientWriteRqstRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bgasfsmsg::ClientIOWriteRspMsg>> PrepareAsyncClientWriteRqst(::grpc::ClientContext* context, const ::bgasfsmsg::ClientIOWriteRqstMsg& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bgasfsmsg::ClientIOWriteRspMsg>>(PrepareAsyncClientWriteRqstRaw(context, request, cq));
    }
    // MDS ==> DataServer: Initiate a prefetch request
    virtual ::grpc::Status MDSDataPrefetch(::grpc::ClientContext* context, const ::bgasfsmsg::DataPrefetchRqstMsg& request, ::bgasfsmsg::DataPrefetchRspMsg* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bgasfsmsg::DataPrefetchRspMsg>> AsyncMDSDataPrefetch(::grpc::ClientContext* context, const ::bgasfsmsg::DataPrefetchRqstMsg& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bgasfsmsg::DataPrefetchRspMsg>>(AsyncMDSDataPrefetchRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bgasfsmsg::DataPrefetchRspMsg>> PrepareAsyncMDSDataPrefetch(::grpc::ClientContext* context, const ::bgasfsmsg::DataPrefetchRqstMsg& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bgasfsmsg::DataPrefetchRspMsg>>(PrepareAsyncMDSDataPrefetchRaw(context, request, cq));
    }
  private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::bgasfsmsg::FileAttrRspMsg>* AsyncClientRqstFileAttrRaw(::grpc::ClientContext* context, const ::bgasfsmsg::FileAttrRqstMsg& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::bgasfsmsg::FileAttrRspMsg>* PrepareAsyncClientRqstFileAttrRaw(::grpc::ClientContext* context, const ::bgasfsmsg::FileAttrRqstMsg& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::bgasfsmsg::UpdateFileAttrRspMsg>* AsyncClientRqstUpdateFileAttrRaw(::grpc::ClientContext* context, const ::bgasfsmsg::UpdateFileAttrRqstMsg& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::bgasfsmsg::UpdateFileAttrRspMsg>* PrepareAsyncClientRqstUpdateFileAttrRaw(::grpc::ClientContext* context, const ::bgasfsmsg::UpdateFileAttrRqstMsg& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::bgasfsmsg::FileIORspMsg>* AsyncClientRqstIORaw(::grpc::ClientContext* context, const ::bgasfsmsg::FileIORqstMsg& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::bgasfsmsg::FileIORspMsg>* PrepareAsyncClientRqstIORaw(::grpc::ClientContext* context, const ::bgasfsmsg::FileIORqstMsg& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::bgasfsmsg::ClientIOReadRspMsg>* AsyncClientReadRqstRaw(::grpc::ClientContext* context, const ::bgasfsmsg::ClientIOReadRqstMsg& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::bgasfsmsg::ClientIOReadRspMsg>* PrepareAsyncClientReadRqstRaw(::grpc::ClientContext* context, const ::bgasfsmsg::ClientIOReadRqstMsg& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::bgasfsmsg::ClientIOWriteRspMsg>* AsyncClientWriteRqstRaw(::grpc::ClientContext* context, const ::bgasfsmsg::ClientIOWriteRqstMsg& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::bgasfsmsg::ClientIOWriteRspMsg>* PrepareAsyncClientWriteRqstRaw(::grpc::ClientContext* context, const ::bgasfsmsg::ClientIOWriteRqstMsg& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::bgasfsmsg::DataPrefetchRspMsg>* AsyncMDSDataPrefetchRaw(::grpc::ClientContext* context, const ::bgasfsmsg::DataPrefetchRqstMsg& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::bgasfsmsg::DataPrefetchRspMsg>* PrepareAsyncMDSDataPrefetchRaw(::grpc::ClientContext* context, const ::bgasfsmsg::DataPrefetchRqstMsg& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel);
    ::grpc::Status ClientRqstFileAttr(::grpc::ClientContext* context, const ::bgasfsmsg::FileAttrRqstMsg& request, ::bgasfsmsg::FileAttrRspMsg* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bgasfsmsg::FileAttrRspMsg>> AsyncClientRqstFileAttr(::grpc::ClientContext* context, const ::bgasfsmsg::FileAttrRqstMsg& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bgasfsmsg::FileAttrRspMsg>>(AsyncClientRqstFileAttrRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bgasfsmsg::FileAttrRspMsg>> PrepareAsyncClientRqstFileAttr(::grpc::ClientContext* context, const ::bgasfsmsg::FileAttrRqstMsg& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bgasfsmsg::FileAttrRspMsg>>(PrepareAsyncClientRqstFileAttrRaw(context, request, cq));
    }
    ::grpc::Status ClientRqstUpdateFileAttr(::grpc::ClientContext* context, const ::bgasfsmsg::UpdateFileAttrRqstMsg& request, ::bgasfsmsg::UpdateFileAttrRspMsg* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bgasfsmsg::UpdateFileAttrRspMsg>> AsyncClientRqstUpdateFileAttr(::grpc::ClientContext* context, const ::bgasfsmsg::UpdateFileAttrRqstMsg& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bgasfsmsg::UpdateFileAttrRspMsg>>(AsyncClientRqstUpdateFileAttrRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bgasfsmsg::UpdateFileAttrRspMsg>> PrepareAsyncClientRqstUpdateFileAttr(::grpc::ClientContext* context, const ::bgasfsmsg::UpdateFileAttrRqstMsg& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bgasfsmsg::UpdateFileAttrRspMsg>>(PrepareAsyncClientRqstUpdateFileAttrRaw(context, request, cq));
    }
    ::grpc::Status ClientRqstIO(::grpc::ClientContext* context, const ::bgasfsmsg::FileIORqstMsg& request, ::bgasfsmsg::FileIORspMsg* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bgasfsmsg::FileIORspMsg>> AsyncClientRqstIO(::grpc::ClientContext* context, const ::bgasfsmsg::FileIORqstMsg& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bgasfsmsg::FileIORspMsg>>(AsyncClientRqstIORaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bgasfsmsg::FileIORspMsg>> PrepareAsyncClientRqstIO(::grpc::ClientContext* context, const ::bgasfsmsg::FileIORqstMsg& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bgasfsmsg::FileIORspMsg>>(PrepareAsyncClientRqstIORaw(context, request, cq));
    }
    ::grpc::Status ClientReadRqst(::grpc::ClientContext* context, const ::bgasfsmsg::ClientIOReadRqstMsg& request, ::bgasfsmsg::ClientIOReadRspMsg* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bgasfsmsg::ClientIOReadRspMsg>> AsyncClientReadRqst(::grpc::ClientContext* context, const ::bgasfsmsg::ClientIOReadRqstMsg& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bgasfsmsg::ClientIOReadRspMsg>>(AsyncClientReadRqstRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bgasfsmsg::ClientIOReadRspMsg>> PrepareAsyncClientReadRqst(::grpc::ClientContext* context, const ::bgasfsmsg::ClientIOReadRqstMsg& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bgasfsmsg::ClientIOReadRspMsg>>(PrepareAsyncClientReadRqstRaw(context, request, cq));
    }
    ::grpc::Status ClientWriteRqst(::grpc::ClientContext* context, const ::bgasfsmsg::ClientIOWriteRqstMsg& request, ::bgasfsmsg::ClientIOWriteRspMsg* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bgasfsmsg::ClientIOWriteRspMsg>> AsyncClientWriteRqst(::grpc::ClientContext* context, const ::bgasfsmsg::ClientIOWriteRqstMsg& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bgasfsmsg::ClientIOWriteRspMsg>>(AsyncClientWriteRqstRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bgasfsmsg::ClientIOWriteRspMsg>> PrepareAsyncClientWriteRqst(::grpc::ClientContext* context, const ::bgasfsmsg::ClientIOWriteRqstMsg& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bgasfsmsg::ClientIOWriteRspMsg>>(PrepareAsyncClientWriteRqstRaw(context, request, cq));
    }
    ::grpc::Status MDSDataPrefetch(::grpc::ClientContext* context, const ::bgasfsmsg::DataPrefetchRqstMsg& request, ::bgasfsmsg::DataPrefetchRspMsg* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bgasfsmsg::DataPrefetchRspMsg>> AsyncMDSDataPrefetch(::grpc::ClientContext* context, const ::bgasfsmsg::DataPrefetchRqstMsg& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bgasfsmsg::DataPrefetchRspMsg>>(AsyncMDSDataPrefetchRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bgasfsmsg::DataPrefetchRspMsg>> PrepareAsyncMDSDataPrefetch(::grpc::ClientContext* context, const ::bgasfsmsg::DataPrefetchRqstMsg& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bgasfsmsg::DataPrefetchRspMsg>>(PrepareAsyncMDSDataPrefetchRaw(context, request, cq));
    }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    ::grpc::ClientAsyncResponseReader< ::bgasfsmsg::FileAttrRspMsg>* AsyncClientRqstFileAttrRaw(::grpc::ClientContext* context, const ::bgasfsmsg::FileAttrRqstMsg& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::bgasfsmsg::FileAttrRspMsg>* PrepareAsyncClientRqstFileAttrRaw(::grpc::ClientContext* context, const ::bgasfsmsg::FileAttrRqstMsg& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::bgasfsmsg::UpdateFileAttrRspMsg>* AsyncClientRqstUpdateFileAttrRaw(::grpc::ClientContext* context, const ::bgasfsmsg::UpdateFileAttrRqstMsg& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::bgasfsmsg::UpdateFileAttrRspMsg>* PrepareAsyncClientRqstUpdateFileAttrRaw(::grpc::ClientContext* context, const ::bgasfsmsg::UpdateFileAttrRqstMsg& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::bgasfsmsg::FileIORspMsg>* AsyncClientRqstIORaw(::grpc::ClientContext* context, const ::bgasfsmsg::FileIORqstMsg& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::bgasfsmsg::FileIORspMsg>* PrepareAsyncClientRqstIORaw(::grpc::ClientContext* context, const ::bgasfsmsg::FileIORqstMsg& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::bgasfsmsg::ClientIOReadRspMsg>* AsyncClientReadRqstRaw(::grpc::ClientContext* context, const ::bgasfsmsg::ClientIOReadRqstMsg& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::bgasfsmsg::ClientIOReadRspMsg>* PrepareAsyncClientReadRqstRaw(::grpc::ClientContext* context, const ::bgasfsmsg::ClientIOReadRqstMsg& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::bgasfsmsg::ClientIOWriteRspMsg>* AsyncClientWriteRqstRaw(::grpc::ClientContext* context, const ::bgasfsmsg::ClientIOWriteRqstMsg& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::bgasfsmsg::ClientIOWriteRspMsg>* PrepareAsyncClientWriteRqstRaw(::grpc::ClientContext* context, const ::bgasfsmsg::ClientIOWriteRqstMsg& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::bgasfsmsg::DataPrefetchRspMsg>* AsyncMDSDataPrefetchRaw(::grpc::ClientContext* context, const ::bgasfsmsg::DataPrefetchRqstMsg& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::bgasfsmsg::DataPrefetchRspMsg>* PrepareAsyncMDSDataPrefetchRaw(::grpc::ClientContext* context, const ::bgasfsmsg::DataPrefetchRqstMsg& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_ClientRqstFileAttr_;
    const ::grpc::internal::RpcMethod rpcmethod_ClientRqstUpdateFileAttr_;
    const ::grpc::internal::RpcMethod rpcmethod_ClientRqstIO_;
    const ::grpc::internal::RpcMethod rpcmethod_ClientReadRqst_;
    const ::grpc::internal::RpcMethod rpcmethod_ClientWriteRqst_;
    const ::grpc::internal::RpcMethod rpcmethod_MDSDataPrefetch_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    // Client ==> MDS: Request a file attribute
    virtual ::grpc::Status ClientRqstFileAttr(::grpc::ServerContext* context, const ::bgasfsmsg::FileAttrRqstMsg* request, ::bgasfsmsg::FileAttrRspMsg* response);
    // Client ==> MDS: Update a file attribute
    virtual ::grpc::Status ClientRqstUpdateFileAttr(::grpc::ServerContext* context, const ::bgasfsmsg::UpdateFileAttrRqstMsg* request, ::bgasfsmsg::UpdateFileAttrRspMsg* response);
    // Client ==> MDS: Initiate an I/O request
    virtual ::grpc::Status ClientRqstIO(::grpc::ServerContext* context, const ::bgasfsmsg::FileIORqstMsg* request, ::bgasfsmsg::FileIORspMsg* response);
    // Client ==> DataServer: Initiate a read request
    virtual ::grpc::Status ClientReadRqst(::grpc::ServerContext* context, const ::bgasfsmsg::ClientIOReadRqstMsg* request, ::bgasfsmsg::ClientIOReadRspMsg* response);
    // Client ==> DataServer: Initiate a write request
    virtual ::grpc::Status ClientWriteRqst(::grpc::ServerContext* context, const ::bgasfsmsg::ClientIOWriteRqstMsg* request, ::bgasfsmsg::ClientIOWriteRspMsg* response);
    // MDS ==> DataServer: Initiate a prefetch request
    virtual ::grpc::Status MDSDataPrefetch(::grpc::ServerContext* context, const ::bgasfsmsg::DataPrefetchRqstMsg* request, ::bgasfsmsg::DataPrefetchRspMsg* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_ClientRqstFileAttr : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_ClientRqstFileAttr() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_ClientRqstFileAttr() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ClientRqstFileAttr(::grpc::ServerContext* context, const ::bgasfsmsg::FileAttrRqstMsg* request, ::bgasfsmsg::FileAttrRspMsg* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestClientRqstFileAttr(::grpc::ServerContext* context, ::bgasfsmsg::FileAttrRqstMsg* request, ::grpc::ServerAsyncResponseWriter< ::bgasfsmsg::FileAttrRspMsg>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ClientRqstUpdateFileAttr : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_ClientRqstUpdateFileAttr() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_ClientRqstUpdateFileAttr() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ClientRqstUpdateFileAttr(::grpc::ServerContext* context, const ::bgasfsmsg::UpdateFileAttrRqstMsg* request, ::bgasfsmsg::UpdateFileAttrRspMsg* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestClientRqstUpdateFileAttr(::grpc::ServerContext* context, ::bgasfsmsg::UpdateFileAttrRqstMsg* request, ::grpc::ServerAsyncResponseWriter< ::bgasfsmsg::UpdateFileAttrRspMsg>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ClientRqstIO : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_ClientRqstIO() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_ClientRqstIO() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ClientRqstIO(::grpc::ServerContext* context, const ::bgasfsmsg::FileIORqstMsg* request, ::bgasfsmsg::FileIORspMsg* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestClientRqstIO(::grpc::ServerContext* context, ::bgasfsmsg::FileIORqstMsg* request, ::grpc::ServerAsyncResponseWriter< ::bgasfsmsg::FileIORspMsg>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ClientReadRqst : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_ClientReadRqst() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_ClientReadRqst() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ClientReadRqst(::grpc::ServerContext* context, const ::bgasfsmsg::ClientIOReadRqstMsg* request, ::bgasfsmsg::ClientIOReadRspMsg* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestClientReadRqst(::grpc::ServerContext* context, ::bgasfsmsg::ClientIOReadRqstMsg* request, ::grpc::ServerAsyncResponseWriter< ::bgasfsmsg::ClientIOReadRspMsg>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ClientWriteRqst : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_ClientWriteRqst() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_ClientWriteRqst() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ClientWriteRqst(::grpc::ServerContext* context, const ::bgasfsmsg::ClientIOWriteRqstMsg* request, ::bgasfsmsg::ClientIOWriteRspMsg* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestClientWriteRqst(::grpc::ServerContext* context, ::bgasfsmsg::ClientIOWriteRqstMsg* request, ::grpc::ServerAsyncResponseWriter< ::bgasfsmsg::ClientIOWriteRspMsg>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_MDSDataPrefetch : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_MDSDataPrefetch() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_MDSDataPrefetch() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status MDSDataPrefetch(::grpc::ServerContext* context, const ::bgasfsmsg::DataPrefetchRqstMsg* request, ::bgasfsmsg::DataPrefetchRspMsg* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestMDSDataPrefetch(::grpc::ServerContext* context, ::bgasfsmsg::DataPrefetchRqstMsg* request, ::grpc::ServerAsyncResponseWriter< ::bgasfsmsg::DataPrefetchRspMsg>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_ClientRqstFileAttr<WithAsyncMethod_ClientRqstUpdateFileAttr<WithAsyncMethod_ClientRqstIO<WithAsyncMethod_ClientReadRqst<WithAsyncMethod_ClientWriteRqst<WithAsyncMethod_MDSDataPrefetch<Service > > > > > > AsyncService;
  template <class BaseClass>
  class WithGenericMethod_ClientRqstFileAttr : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_ClientRqstFileAttr() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_ClientRqstFileAttr() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ClientRqstFileAttr(::grpc::ServerContext* context, const ::bgasfsmsg::FileAttrRqstMsg* request, ::bgasfsmsg::FileAttrRspMsg* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ClientRqstUpdateFileAttr : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_ClientRqstUpdateFileAttr() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_ClientRqstUpdateFileAttr() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ClientRqstUpdateFileAttr(::grpc::ServerContext* context, const ::bgasfsmsg::UpdateFileAttrRqstMsg* request, ::bgasfsmsg::UpdateFileAttrRspMsg* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ClientRqstIO : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_ClientRqstIO() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_ClientRqstIO() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ClientRqstIO(::grpc::ServerContext* context, const ::bgasfsmsg::FileIORqstMsg* request, ::bgasfsmsg::FileIORspMsg* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ClientReadRqst : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_ClientReadRqst() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_ClientReadRqst() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ClientReadRqst(::grpc::ServerContext* context, const ::bgasfsmsg::ClientIOReadRqstMsg* request, ::bgasfsmsg::ClientIOReadRspMsg* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ClientWriteRqst : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_ClientWriteRqst() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_ClientWriteRqst() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ClientWriteRqst(::grpc::ServerContext* context, const ::bgasfsmsg::ClientIOWriteRqstMsg* request, ::bgasfsmsg::ClientIOWriteRspMsg* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_MDSDataPrefetch : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_MDSDataPrefetch() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_MDSDataPrefetch() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status MDSDataPrefetch(::grpc::ServerContext* context, const ::bgasfsmsg::DataPrefetchRqstMsg* request, ::bgasfsmsg::DataPrefetchRspMsg* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ClientRqstFileAttr : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_ClientRqstFileAttr() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler< ::bgasfsmsg::FileAttrRqstMsg, ::bgasfsmsg::FileAttrRspMsg>(std::bind(&WithStreamedUnaryMethod_ClientRqstFileAttr<BaseClass>::StreamedClientRqstFileAttr, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_ClientRqstFileAttr() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ClientRqstFileAttr(::grpc::ServerContext* context, const ::bgasfsmsg::FileAttrRqstMsg* request, ::bgasfsmsg::FileAttrRspMsg* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedClientRqstFileAttr(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::bgasfsmsg::FileAttrRqstMsg,::bgasfsmsg::FileAttrRspMsg>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ClientRqstUpdateFileAttr : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_ClientRqstUpdateFileAttr() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler< ::bgasfsmsg::UpdateFileAttrRqstMsg, ::bgasfsmsg::UpdateFileAttrRspMsg>(std::bind(&WithStreamedUnaryMethod_ClientRqstUpdateFileAttr<BaseClass>::StreamedClientRqstUpdateFileAttr, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_ClientRqstUpdateFileAttr() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ClientRqstUpdateFileAttr(::grpc::ServerContext* context, const ::bgasfsmsg::UpdateFileAttrRqstMsg* request, ::bgasfsmsg::UpdateFileAttrRspMsg* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedClientRqstUpdateFileAttr(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::bgasfsmsg::UpdateFileAttrRqstMsg,::bgasfsmsg::UpdateFileAttrRspMsg>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ClientRqstIO : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_ClientRqstIO() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler< ::bgasfsmsg::FileIORqstMsg, ::bgasfsmsg::FileIORspMsg>(std::bind(&WithStreamedUnaryMethod_ClientRqstIO<BaseClass>::StreamedClientRqstIO, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_ClientRqstIO() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ClientRqstIO(::grpc::ServerContext* context, const ::bgasfsmsg::FileIORqstMsg* request, ::bgasfsmsg::FileIORspMsg* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedClientRqstIO(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::bgasfsmsg::FileIORqstMsg,::bgasfsmsg::FileIORspMsg>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ClientReadRqst : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_ClientReadRqst() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler< ::bgasfsmsg::ClientIOReadRqstMsg, ::bgasfsmsg::ClientIOReadRspMsg>(std::bind(&WithStreamedUnaryMethod_ClientReadRqst<BaseClass>::StreamedClientReadRqst, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_ClientReadRqst() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ClientReadRqst(::grpc::ServerContext* context, const ::bgasfsmsg::ClientIOReadRqstMsg* request, ::bgasfsmsg::ClientIOReadRspMsg* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedClientReadRqst(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::bgasfsmsg::ClientIOReadRqstMsg,::bgasfsmsg::ClientIOReadRspMsg>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ClientWriteRqst : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_ClientWriteRqst() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler< ::bgasfsmsg::ClientIOWriteRqstMsg, ::bgasfsmsg::ClientIOWriteRspMsg>(std::bind(&WithStreamedUnaryMethod_ClientWriteRqst<BaseClass>::StreamedClientWriteRqst, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_ClientWriteRqst() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ClientWriteRqst(::grpc::ServerContext* context, const ::bgasfsmsg::ClientIOWriteRqstMsg* request, ::bgasfsmsg::ClientIOWriteRspMsg* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedClientWriteRqst(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::bgasfsmsg::ClientIOWriteRqstMsg,::bgasfsmsg::ClientIOWriteRspMsg>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_MDSDataPrefetch : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_MDSDataPrefetch() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::StreamedUnaryHandler< ::bgasfsmsg::DataPrefetchRqstMsg, ::bgasfsmsg::DataPrefetchRspMsg>(std::bind(&WithStreamedUnaryMethod_MDSDataPrefetch<BaseClass>::StreamedMDSDataPrefetch, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_MDSDataPrefetch() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status MDSDataPrefetch(::grpc::ServerContext* context, const ::bgasfsmsg::DataPrefetchRqstMsg* request, ::bgasfsmsg::DataPrefetchRspMsg* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedMDSDataPrefetch(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::bgasfsmsg::DataPrefetchRqstMsg,::bgasfsmsg::DataPrefetchRspMsg>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_ClientRqstFileAttr<WithStreamedUnaryMethod_ClientRqstUpdateFileAttr<WithStreamedUnaryMethod_ClientRqstIO<WithStreamedUnaryMethod_ClientReadRqst<WithStreamedUnaryMethod_ClientWriteRqst<WithStreamedUnaryMethod_MDSDataPrefetch<Service > > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_ClientRqstFileAttr<WithStreamedUnaryMethod_ClientRqstUpdateFileAttr<WithStreamedUnaryMethod_ClientRqstIO<WithStreamedUnaryMethod_ClientReadRqst<WithStreamedUnaryMethod_ClientWriteRqst<WithStreamedUnaryMethod_MDSDataPrefetch<Service > > > > > > StreamedService;
};

}  // namespace bgasfsmsg


#endif  // GRPC_bgasfs_2eproto__INCLUDED
